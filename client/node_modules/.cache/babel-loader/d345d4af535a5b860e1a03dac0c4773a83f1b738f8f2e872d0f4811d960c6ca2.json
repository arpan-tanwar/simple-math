{"ast":null,"code":"var _jsxFileName = \"D:\\\\Freelancing\\\\simple-math\\\\client\\\\src\\\\component\\\\arithmetic\\\\efractions\\\\Fraction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Fraction1 from './Fraction1';\nimport Fraction2 from './Fraction2';\nimport Fraction3 from './Fraction3';\nimport Fraction4 from './Fraction4';\nimport CheckModal from '../arithmetic/CheckModal';\nimport SolutionFracModal from './SolutionFracModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fraction = ({\n  efraction,\n  difficulty2,\n  btnFracNextRef\n}) => {\n  _s();\n  const [randomFrac, setRandomFrac] = useState({\n    numerator: 1,\n    denominator: 1\n  });\n  const [inputs, setInputs] = useState({\n    inputNum: null,\n    inputDenom: null\n  });\n  const [inputs4, setInputs4] = useState({\n    numerator: null,\n    denominator: null\n  });\n  const [inputRange, setInputRange] = useState({\n    min: 1,\n    max: 9\n  });\n  const [result, setResult] = useState(false);\n  const [showSolutionModal, setShowSolutionModal] = useState(false);\n  const [showCheckModal, setShowCheckModal] = useState(false);\n  const [multiplyNumber, setMultiplyNumber] = useState(1);\n  const [mathInputNull, setMathInputNull] = useState(false);\n  function clearInputs() {\n    setInputs({\n      inputNum: null,\n      inputDenom: null\n    });\n  }\n  useEffect(() => {\n    setMultiplyNumber(getMultiplyNumber());\n    console.log(\"useEffect is rendered..\");\n    handleNext(difficulty2);\n  }, [difficulty2]);\n  function getRandomNumber(min, max) {\n    let randomNumber;\n    do {\n      randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n    } while (randomNumber === 0);\n    return randomNumber;\n  }\n  function getMultiplyNumber() {\n    return Math.floor(Math.random() * 3) + 2;\n  }\n  function simplifyFraction(numerator, denominator) {\n    if (numerator == \"\" || denominator == \"\") {\n      return;\n    }\n    // Function to find greatest common divisor (GCD) using Euclid's algorithm\n    const gcd = (a, b) => {\n      if (b === 0) {\n        return a;\n      }\n      return gcd(b, a % b);\n    };\n\n    // Find the GCD of numerator and denominator\n    const gcdValue = gcd(numerator, denominator);\n\n    // Divide both numerator and denominator by their GCD to get the smallest equivalent fraction\n    const smallestNumerator = numerator / gcdValue;\n    const smallestDenominator = denominator / gcdValue;\n    return [smallestNumerator, smallestDenominator];\n  }\n  const handleNext = difficulty2 => {\n    setMultiplyNumber(getMultiplyNumber());\n    clearInputs();\n    switch (difficulty2) {\n      case 1:\n        setInputRange({\n          min: 1,\n          max: 9\n        });\n        break;\n      case 2:\n        setInputRange({\n          min: 1,\n          max: 30\n        });\n        break;\n      case 3:\n        setInputRange({\n          min: -9,\n          max: 9\n        });\n        break;\n      case 4:\n        setInputRange({\n          min: -9,\n          max: 9\n        });\n        break;\n      default:\n        setInputRange({\n          min: 1,\n          max: 9\n        });\n        break;\n    }\n    var numerator = getRandomNumber(inputRange.min, inputRange.max);\n    var denominator = getRandomNumber(inputRange.min, inputRange.max);\n    if (difficulty2 === 3 && numerator < 0 && denominator < 0) {\n      console.log(\"both are negative\");\n      denominator = Math.abs(denominator);\n    }\n    setRandomFrac({\n      numerator: numerator,\n      denominator: denominator\n    });\n  };\n  const handleCheck = () => {\n    let checkResult = 1;\n    let inputResult = 2;\n    const num = Number(inputs.inputNum);\n    const denom = Number(inputs.inputDenom);\n    if (efraction === 1) {\n      if (inputs.inputNum == multiplyNumber && inputs.inputDenom == multiplyNumber) {\n        checkResult = 1;\n        inputResult = 1;\n      }\n    }\n    if (efraction === 2) {\n      const [fracNum, fracDenom] = simplifyFraction(randomFrac.numerator, randomFrac.denominator);\n      const [inputNum, inputDenom] = simplifyFraction(inputs.inputNum || 2.5, inputs.inputDenom || 1.3);\n      if (fracNum == inputNum && fracDenom == inputDenom) {\n        checkResult = 1;\n        inputResult = 1;\n      }\n    }\n    if (efraction === 3) {\n      if (inputs.inputNum == randomFrac.numerator * multiplyNumber) {\n        checkResult = 1;\n        inputResult = 1;\n      }\n    }\n    if (efraction === 4) {\n      console.log(randomFrac, inputs4, inputs);\n      const [fracNum, fracDenom] = simplifyFraction(randomFrac.numerator, randomFrac.denominator);\n      const [inputs4Num, inputs4Denom] = simplifyFraction(inputs4.inputNum, inputs4.inputDenom);\n      const [inputsNum, inputsDenom] = simplifyFraction(inputs.inputNum, inputs.inputDenom);\n      console.log(fracNum, fracDenom, inputs4Num, inputs4Denom, inputsNum, inputsDenom);\n    }\n    if (checkResult == inputResult) {\n      setResult(true);\n      console.log(\"result is true\", result);\n    } else {\n      setResult(false);\n    }\n    console.log(\"result right before check\", result);\n    setShowCheckModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"math  flex justify-start  mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(inputs4),\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [efraction === 1 && /*#__PURE__*/_jsxDEV(Fraction1, {\n            randomFrac: randomFrac,\n            multiplyNumber: multiplyNumber,\n            inputs: inputs,\n            setInputs: setInputs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 39\n          }, this), efraction === 2 && /*#__PURE__*/_jsxDEV(Fraction2, {\n            randomFrac: randomFrac,\n            inputs: inputs,\n            setInputs: setInputs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 39\n          }, this), efraction === 3 && /*#__PURE__*/_jsxDEV(Fraction3, {\n            randomFrac: randomFrac,\n            multiplyNumber: multiplyNumber,\n            inputs: inputs,\n            setInputs: setInputs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 39\n          }, this), efraction === 4 && /*#__PURE__*/_jsxDEV(Fraction4, {\n            randomFrac: randomFrac,\n            multiplyNumber: multiplyNumber,\n            inputs: inputs,\n            setInputs: setInputs,\n            inputs4: inputs4,\n            setInputs4: setInputs4,\n            mathInputNull: mathInputNull,\n            setMathInputNull: setMathInputNull\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons w-full  flex flex-row justify-start mt-14\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCheck(),\n            className: \"btn-drill\",\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleNext(difficulty2),\n            ref: btnFracNextRef,\n            className: \"btn-drill ml-1 md:ml-3\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CheckModal, {\n      showCheckModal: showCheckModal,\n      setShowSolutionModal: setShowSolutionModal,\n      setShowCheckModal: setShowCheckModal,\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SolutionFracModal, {\n      efraction: efraction,\n      showSolutionModal: showSolutionModal,\n      setShowSolutionModal: setShowSolutionModal,\n      setShowCheckModal: setShowCheckModal,\n      randomFrac: randomFrac,\n      inputs: inputs,\n      multiplyNumber: multiplyNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(Fraction, \"blKsJWwVy40IAu8msj2jd3z9dcE=\");\n_c = Fraction;\nexport default Fraction;\nvar _c;\n$RefreshReg$(_c, \"Fraction\");","map":{"version":3,"names":["React","useState","useEffect","Fraction1","Fraction2","Fraction3","Fraction4","CheckModal","SolutionFracModal","jsxDEV","_jsxDEV","Fraction","efraction","difficulty2","btnFracNextRef","_s","randomFrac","setRandomFrac","numerator","denominator","inputs","setInputs","inputNum","inputDenom","inputs4","setInputs4","inputRange","setInputRange","min","max","result","setResult","showSolutionModal","setShowSolutionModal","showCheckModal","setShowCheckModal","multiplyNumber","setMultiplyNumber","mathInputNull","setMathInputNull","clearInputs","getMultiplyNumber","console","log","handleNext","getRandomNumber","randomNumber","Math","floor","random","simplifyFraction","gcd","a","b","gcdValue","smallestNumerator","smallestDenominator","abs","handleCheck","checkResult","inputResult","num","Number","denom","fracNum","fracDenom","inputs4Num","inputs4Denom","inputsNum","inputsDenom","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/Freelancing/simple-math/client/src/component/arithmetic/efractions/Fraction.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Fraction1 from './Fraction1'\r\nimport Fraction2 from './Fraction2'\r\nimport Fraction3 from './Fraction3'\r\nimport Fraction4 from './Fraction4'\r\nimport CheckModal from '../arithmetic/CheckModal'\r\nimport SolutionFracModal from './SolutionFracModal'\r\n\r\n\r\n\r\n\r\nconst Fraction = ({efraction, difficulty2, btnFracNextRef}) => {\r\n\r\n  \r\n\r\n  \r\n \r\n  const [randomFrac, setRandomFrac] = useState({\r\n    numerator : 1,\r\n    denominator : 1\r\n  })\r\n\r\n  const [inputs, setInputs] = useState({\r\n    inputNum: null,\r\n    inputDenom: null\r\n  })\r\n\r\n  const [inputs4, setInputs4] = useState({\r\n    numerator: null,\r\n    denominator: null\r\n   })\r\n\r\n  const [inputRange, setInputRange] = useState({\r\n    min: 1,\r\n    max: 9\r\n  })\r\n\r\n  const [result, setResult] = useState(false)\r\n  const [showSolutionModal, setShowSolutionModal] = useState(false)\r\n  const [showCheckModal, setShowCheckModal] =  useState(false)\r\n  const [multiplyNumber, setMultiplyNumber] = useState(1)\r\n  const [mathInputNull, setMathInputNull] = useState(false)\r\n\r\n  function clearInputs() {\r\n    setInputs({\r\n      inputNum: null,\r\n      inputDenom: null\r\n     })\r\n  }\r\n\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n   setMultiplyNumber(getMultiplyNumber())\r\n   console.log(\"useEffect is rendered..\")\r\n    handleNext(difficulty2)\r\n  }, [difficulty2]);\r\n\r\n  function getRandomNumber(min, max) {\r\n    let randomNumber;\r\n    do {\r\n      randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    } \r\n    while (randomNumber===0)\r\n    \r\n    return randomNumber;\r\n  }\r\n\r\n  \r\n  function  getMultiplyNumber() {\r\n    return Math.floor(Math.random() * 3) + 2;\r\n  }\r\n  \r\n \r\n  function simplifyFraction(numerator, denominator) {\r\n\r\n       if(numerator==\"\" || denominator==\"\"){\r\n        return;\r\n       }\r\n        // Function to find greatest common divisor (GCD) using Euclid's algorithm\r\n        const gcd = (a, b) => {\r\n            if (b === 0) {\r\n                return a;\r\n            }\r\n            return gcd(b, a % b);\r\n        };\r\n    \r\n        // Find the GCD of numerator and denominator\r\n        const gcdValue = gcd(numerator, denominator);\r\n    \r\n        // Divide both numerator and denominator by their GCD to get the smallest equivalent fraction\r\n        const smallestNumerator = numerator / gcdValue;\r\n        const smallestDenominator = denominator / gcdValue;\r\n    \r\n        return [smallestNumerator, smallestDenominator];\r\n    }\r\n\r\n\r\n\r\n  const handleNext = (difficulty2) => {\r\n    setMultiplyNumber(getMultiplyNumber())\r\n  clearInputs()\r\n  switch (difficulty2) {\r\n    case 1: \r\n        setInputRange({min:1, max:9});\r\n      break;\r\n\r\n    case 2:    \r\n    setInputRange({min:1, max:30});\r\n      break;\r\n\r\n    case 3:\r\n      setInputRange({min:-9, max:9});\r\n    break;\r\n\r\n    case 4:\r\n      setInputRange({min:-9, max:9});\r\n  break;\r\n\r\n    default:\r\n      setInputRange({min:1, max:9});\r\n      break;\r\n  }\r\n\r\n  var numerator = getRandomNumber(inputRange.min, inputRange.max);\r\n  var denominator = getRandomNumber(inputRange.min, inputRange.max);\r\n \r\n\r\n  if(difficulty2===3 && numerator<0 && denominator<0){\r\n    console.log(\"both are negative\")\r\n    denominator = Math.abs(denominator)\r\n  }\r\n\r\n  setRandomFrac({\r\n      numerator: numerator,\r\n      denominator: denominator\r\n  });\r\n\r\n  \r\n\r\n  \r\n}\r\n\r\nconst handleCheck = () => {\r\n  \r\n  let checkResult=1;\r\n  let inputResult=2;\r\n\r\n  const num = Number(inputs.inputNum);\r\n  const denom = Number(inputs.inputDenom)\r\n\r\n  if(efraction===1){\r\n    if(inputs.inputNum==multiplyNumber && inputs.inputDenom==multiplyNumber){\r\n      checkResult=1;\r\n      inputResult=1;\r\n    }\r\n  }\r\n\r\n  if(efraction===2){\r\n    const [fracNum, fracDenom] = simplifyFraction(randomFrac.numerator, randomFrac.denominator)\r\n    const  [inputNum, inputDenom] = simplifyFraction(inputs.inputNum || 2.5, inputs.inputDenom || 1.3)\r\n    if(fracNum==inputNum && fracDenom==inputDenom){\r\n      checkResult=1;\r\n      inputResult=1;\r\n    }\r\n  }\r\n\r\n  if(efraction===3){\r\n    if(inputs.inputNum == randomFrac.numerator*multiplyNumber ){\r\n      checkResult=1;\r\n      inputResult=1;\r\n    }\r\n  }\r\n\r\n  if(efraction===4){\r\n    console.log(randomFrac, inputs4, inputs)\r\n     const [fracNum, fracDenom] = simplifyFraction(randomFrac.numerator, randomFrac.denominator)\r\n     const [inputs4Num, inputs4Denom] = simplifyFraction(inputs4.inputNum, inputs4.inputDenom)\r\n     const [inputsNum, inputsDenom] = simplifyFraction(inputs.inputNum, inputs.inputDenom)\r\n\r\n     console.log(fracNum, fracDenom, inputs4Num, inputs4Denom, inputsNum, inputsDenom)\r\n  }\r\n\r\n  \r\n  if(checkResult==inputResult){\r\n    setResult(true)\r\n    console.log(\"result is true\", result)\r\n  }\r\n  else{\r\n    setResult(false)\r\n  }\r\n  console.log(\"result right before check\", result)\r\n  setShowCheckModal(true)\r\n}\r\n\r\n\r\n \r\n  \r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div className='flex flex-col'>\r\n        <div className='math  flex justify-start  mt-2'>\r\n          <button onClick={()=> console.log(inputs4)}>show</button>\r\n              <div>\r\n                  <div>\r\n                   {/* <button onClick={()=>console.log(inputs)}>show</button> */}\r\n                    {efraction===1 && <Fraction1 randomFrac={randomFrac} multiplyNumber={multiplyNumber} inputs={inputs} setInputs={setInputs} />}    \r\n                    {efraction===2 && <Fraction2 randomFrac={randomFrac} inputs={inputs} setInputs={setInputs} />}   \r\n                    {efraction===3 && <Fraction3 randomFrac={randomFrac} multiplyNumber={multiplyNumber} inputs={inputs} setInputs={setInputs}/>} \r\n\r\n                    {efraction===4 && <Fraction4 randomFrac={randomFrac} multiplyNumber={multiplyNumber} inputs={inputs} setInputs={setInputs} inputs4={inputs4} setInputs4={setInputs4} mathInputNull={mathInputNull} setMathInputNull={setMathInputNull}/>}         \r\n                       \r\n                  </div>\r\n\r\n                  <div className='buttons w-full  flex flex-row justify-start mt-14'>\r\n                    <button onClick={()=>handleCheck()}  className='btn-drill'>Check</button>\r\n\r\n                    <button onClick={()=>handleNext(difficulty2)} ref={btnFracNextRef}  className='btn-drill ml-1 md:ml-3'>Next</button>\r\n                  </div>\r\n              </div>   \r\n        </div>   \r\n\r\n        <CheckModal showCheckModal={showCheckModal}  setShowSolutionModal={setShowSolutionModal} setShowCheckModal={setShowCheckModal} result={result} />   \r\n\r\n        <SolutionFracModal efraction={efraction} showSolutionModal={showSolutionModal} setShowSolutionModal={setShowSolutionModal}  setShowCheckModal={setShowCheckModal} randomFrac={randomFrac} inputs={inputs} multiplyNumber={multiplyNumber}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Fraction\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}