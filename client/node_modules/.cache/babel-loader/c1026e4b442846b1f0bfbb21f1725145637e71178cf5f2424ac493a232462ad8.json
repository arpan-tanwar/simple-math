{"ast":null,"code":"// useShared.js\nimport{useState,useEffect,useContext}from'react';function useShared(difficulty2){const[randomFrac,setRandomFrac]=useState({numerator:1,denominator:1});const[inputs,setInputs]=useState({inputNum:2,inputDenom:3});const[inputRange,setInputRange]=useState({min:1,max:9});function clearInputs(){setInputs({inputNum:null,inputDenom:null});}function getRandomNumber(min,max){let randomNumber;do{randomNumber=Math.floor(Math.random()*(max-min+1))+min;}while(randomNumber===0);return randomNumber;}function getMultiplyNumber(){return Math.floor(Math.random()*3)+2;}const handleNext=difficulty2=>{clearInputs();switch(difficulty2){case 1:setInputRange({min:1,max:9});break;case 2:setInputRange({min:1,max:30});break;case 3:setInputRange({min:-9,max:9});break;case 4:setInputRange({min:-9,max:9});break;default:setInputRange({min:1,max:9});break;}var numerator=getRandomNumber(inputRange.min,inputRange.max);var denominator=getRandomNumber(inputRange.min,inputRange.max);// do {\n//     var negativeCount = 0;\n//     var numerator1 = getRandomNumber(inputRange.min, inputRange.max);\n//     var denominator1 = getRandomNumber(inputRange.min, inputRange.max);\n//     if (numerator1 < 0) negativeCount++;\n//     if (denominator1 < 0) negativeCount++;\n//      // Check if difficulty is 3 and there are more than 1 negative numbers\n//     if (difficulty === 3 && negativeCount>1) {\n//       continue; // Skip this iteration and generate new numbers\n//     }             \n// } while (true);\nsetRandomFrac({numerator:numerator,denominator:denominator});};// Other shared functionality...\nreturn{randomFrac,setRandomFrac,getMultiplyNumber,clearInputs,inputRange,getRandomNumber,handleNext};}export default useShared;","map":{"version":3,"names":["useState","useEffect","useContext","useShared","difficulty2","randomFrac","setRandomFrac","numerator","denominator","inputs","setInputs","inputNum","inputDenom","inputRange","setInputRange","min","max","clearInputs","getRandomNumber","randomNumber","Math","floor","random","getMultiplyNumber","handleNext"],"sources":["/Users/arpan/Documents/GitHub/simple-math/client/src/component/arithmetic/efractions/useShared.js"],"sourcesContent":["// useShared.js\nimport { useState, useEffect, useContext} from 'react';\n\nfunction useShared(difficulty2) {\n    const [randomFrac, setRandomFrac] = useState({\n        numerator : 1,\n        denominator : 1\n      })\n    \n      const [inputs, setInputs] = useState({\n        inputNum: 2,\n        inputDenom: 3\n      })\n\n      const [inputRange, setInputRange] = useState({\n        min: 1,\n        max: 9\n      })\n\n    \n      function clearInputs() {\n        setInputs({\n          inputNum: null,\n          inputDenom: null\n         })\n      }\n    \n      function getRandomNumber(min, max) {\n        let randomNumber;\n        do {\n          randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n        } \n        while (randomNumber===0)\n        \n        return randomNumber;\n      }\n\n      \n      function  getMultiplyNumber() {\n        return Math.floor(Math.random() * 3) + 2;\n      }\n      \n    \n\n\n      const handleNext = (difficulty2) => {\n        clearInputs()\n     \n      \n      switch (difficulty2) {\n        case 1: \n            setInputRange({min:1, max:9});\n          break;\n  \n        case 2:    \n        setInputRange({min:1, max:30});\n          break;\n  \n        case 3:\n          setInputRange({min:-9, max:9});\n        break;\n  \n        case 4:\n          setInputRange({min:-9, max:9});\n      break;\n  \n        default:\n          setInputRange({min:1, max:9});\n          break;\n      }\n\n      var numerator = getRandomNumber(inputRange.min, inputRange.max);\n      var denominator = getRandomNumber(inputRange.min, inputRange.max);\n     \n      // do {\n      //     var negativeCount = 0;\n      //     var numerator1 = getRandomNumber(inputRange.min, inputRange.max);\n      //     var denominator1 = getRandomNumber(inputRange.min, inputRange.max);\n  \n      //     if (numerator1 < 0) negativeCount++;\n      //     if (denominator1 < 0) negativeCount++;\n\n      //      // Check if difficulty is 3 and there are more than 1 negative numbers\n      //     if (difficulty === 3 && negativeCount>1) {\n      //       continue; // Skip this iteration and generate new numbers\n      //     }             \n        \n      // } while (true);\n  \n      setRandomFrac({\n          numerator: numerator,\n          denominator: denominator\n      });\n\n      \n    }\n\n  // Other shared functionality...\n\n  return {\n    \n     randomFrac,\n     setRandomFrac,\n     getMultiplyNumber,\n     clearInputs,\n     inputRange,\n     getRandomNumber,\n     handleNext,\n     \n\n  };\n}\n\nexport default useShared;\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAO,OAAO,CAEtD,QAAS,CAAAC,SAASA,CAACC,WAAW,CAAE,CAC5B,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGN,QAAQ,CAAC,CACzCO,SAAS,CAAG,CAAC,CACbC,WAAW,CAAG,CAChB,CAAC,CAAC,CAEF,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,CACnCW,QAAQ,CAAE,CAAC,CACXC,UAAU,CAAE,CACd,CAAC,CAAC,CAEF,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,CAC3Ce,GAAG,CAAE,CAAC,CACNC,GAAG,CAAE,CACP,CAAC,CAAC,CAGF,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrBP,SAAS,CAAC,CACRC,QAAQ,CAAE,IAAI,CACdC,UAAU,CAAE,IACb,CAAC,CAAC,CACL,CAEA,QAAS,CAAAM,eAAeA,CAACH,GAAG,CAAEC,GAAG,CAAE,CACjC,GAAI,CAAAG,YAAY,CAChB,EAAG,CACDA,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAIN,GAAG,CAAGD,GAAG,CAAG,CAAC,CAAC,CAAC,CAAGA,GAAG,CAClE,CAAC,MACMI,YAAY,GAAG,CAAC,EAEvB,MAAO,CAAAA,YAAY,CACrB,CAGA,QAAU,CAAAI,iBAAiBA,CAAA,CAAG,CAC5B,MAAO,CAAAH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC,CAAG,CAAC,CAC1C,CAKA,KAAM,CAAAE,UAAU,CAAIpB,WAAW,EAAK,CAClCa,WAAW,CAAC,CAAC,CAGf,OAAQb,WAAW,EACjB,IAAK,EAAC,CACFU,aAAa,CAAC,CAACC,GAAG,CAAC,CAAC,CAAEC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC/B,MAEF,IAAK,EAAC,CACNF,aAAa,CAAC,CAACC,GAAG,CAAC,CAAC,CAAEC,GAAG,CAAC,EAAE,CAAC,CAAC,CAC5B,MAEF,IAAK,EAAC,CACJF,aAAa,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAAEC,GAAG,CAAC,CAAC,CAAC,CAAC,CAChC,MAEA,IAAK,EAAC,CACJF,aAAa,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAAEC,GAAG,CAAC,CAAC,CAAC,CAAC,CAClC,MAEE,QACEF,aAAa,CAAC,CAACC,GAAG,CAAC,CAAC,CAAEC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC7B,MACJ,CAEA,GAAI,CAAAT,SAAS,CAAGW,eAAe,CAACL,UAAU,CAACE,GAAG,CAAEF,UAAU,CAACG,GAAG,CAAC,CAC/D,GAAI,CAAAR,WAAW,CAAGU,eAAe,CAACL,UAAU,CAACE,GAAG,CAAEF,UAAU,CAACG,GAAG,CAAC,CAEjE;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEAV,aAAa,CAAC,CACVC,SAAS,CAAEA,SAAS,CACpBC,WAAW,CAAEA,WACjB,CAAC,CAAC,CAGJ,CAAC,CAEH;AAEA,MAAO,CAEJH,UAAU,CACVC,aAAa,CACbiB,iBAAiB,CACjBN,WAAW,CACXJ,UAAU,CACVK,eAAe,CACfM,UAGH,CAAC,CACH,CAEA,cAAe,CAAArB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}