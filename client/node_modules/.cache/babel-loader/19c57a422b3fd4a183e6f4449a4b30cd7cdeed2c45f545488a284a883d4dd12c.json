{"ast":null,"code":"var _s = $RefreshSig$();\n// useShared.js\nimport { useState, useEffect } from 'react';\nfunction useShared() {\n  _s();\n  const [randomFrac, setRandomFrac] = useState({\n    numerator1: 1,\n    denominator1: 1\n  });\n  const [inputs, setInputs] = useState({\n    inputNum: 2,\n    inputDenom: 3\n  });\n  function clearInputs() {\n    setInputs({\n      inputNum: null,\n      inputDenom: null\n    });\n  }\n  function getRandomNumber(min, max) {\n    let randomNumber;\n    do {\n      randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n    } while (randomNumber === 0);\n    return randomNumber;\n  }\n  const handleNext = setInputRange => {\n    clearInputs();\n    switch (difficulty) {\n      case 1:\n        setInputRangeProps({\n          min: 1,\n          max: 9\n        });\n        break;\n      case 2:\n        setInputRangeProps({\n          min: 1,\n          max: 30\n        });\n        break;\n      case 3:\n        setInputRangeProps({\n          min: -9,\n          max: 9\n        });\n        break;\n      case 4:\n        setInputRangeProps({\n          min: -9,\n          max: 9\n        });\n        break;\n      default:\n        setInputRangeProps({\n          min: 1,\n          max: 9\n        });\n        break;\n    }\n    do {\n      var negativeCount = 0;\n      var numerator1 = getRandomNumber(inputRange.min, inputRange.max);\n      var denominator1 = getRandomNumber(inputRange.min, inputRange.max);\n      if (numerator1 < 0) negativeCount++;\n      if (denominator1 < 0) negativeCount++;\n\n      // Check if difficulty is 3 and there are more than 1 negative numbers\n      if (difficulty === 3 && negativeCount > 1) {\n        continue; // Skip this iteration and generate new numbers\n      }\n    } while (true);\n    setRandomFrac({\n      numerator1: numerator1,\n      denominator1: denominator1\n    });\n    console.log(\"random in the end. \", randomFrac);\n  };\n\n  // Other shared functionality...\n\n  return {\n    randomFrac,\n    setRandomFrac,\n    inputs,\n    setInputs,\n    clearInputs,\n    getRandomNumber,\n    handleNext\n  };\n}\n_s(useShared, \"jzTIIWDA6M6LILLQFTjZZdxbvlI=\");\nexport default useShared;","map":{"version":3,"names":["useState","useEffect","useShared","_s","randomFrac","setRandomFrac","numerator1","denominator1","inputs","setInputs","inputNum","inputDenom","clearInputs","getRandomNumber","min","max","randomNumber","Math","floor","random","handleNext","setInputRange","difficulty","setInputRangeProps","negativeCount","inputRange","console","log"],"sources":["D:/Freelancing/simple-math/client/src/component/arithmetic/efractions/useShared.js"],"sourcesContent":["// useShared.js\r\nimport { useState, useEffect} from 'react';\r\n\r\nfunction useShared() {\r\n    const [randomFrac, setRandomFrac] = useState({\r\n        numerator1 : 1,\r\n        denominator1 : 1\r\n      })\r\n    \r\n      const [inputs, setInputs] = useState({\r\n        inputNum: 2,\r\n        inputDenom: 3\r\n      })\r\n    \r\n      function clearInputs() {\r\n        setInputs({\r\n          inputNum: null,\r\n          inputDenom: null\r\n         })\r\n      }\r\n    \r\n      function getRandomNumber(min, max) {\r\n        let randomNumber;\r\n        do {\r\n          randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\r\n        } \r\n        while (randomNumber===0)\r\n        \r\n        return randomNumber;\r\n      }\r\n\r\n      const handleNext = (setInputRange) => {\r\n        clearInputs()\r\n     \r\n  \r\n      switch (difficulty) {\r\n        case 1: \r\n            setInputRangeProps({min:1, max:9});\r\n          break;\r\n  \r\n        case 2:    \r\n        setInputRangeProps({min:1, max:30});\r\n          break;\r\n  \r\n        case 3:\r\n          setInputRangeProps({min:-9, max:9});\r\n        break;\r\n  \r\n        case 4:\r\n          setInputRangeProps({min:-9, max:9});\r\n      break;\r\n  \r\n        default:\r\n          setInputRangeProps({min:1, max:9});\r\n          break;\r\n      }\r\n     \r\n      do {\r\n          var negativeCount = 0;\r\n          var numerator1 = getRandomNumber(inputRange.min, inputRange.max);\r\n          var denominator1 = getRandomNumber(inputRange.min, inputRange.max);\r\n  \r\n          if (numerator1 < 0) negativeCount++;\r\n          if (denominator1 < 0) negativeCount++;\r\n\r\n           // Check if difficulty is 3 and there are more than 1 negative numbers\r\n          if (difficulty === 3 && negativeCount>1) {\r\n            continue; // Skip this iteration and generate new numbers\r\n          }             \r\n        \r\n      } while (true);\r\n  \r\n      setRandomFrac({\r\n          numerator1: numerator1,\r\n          denominator1: denominator1\r\n      });\r\n  \r\n      console.log(\"random in the end. \", randomFrac)\r\n      \r\n    }\r\n\r\n  // Other shared functionality...\r\n\r\n  return {\r\n     randomFrac,\r\n     setRandomFrac,\r\n     inputs,\r\n     setInputs,\r\n     clearInputs,\r\n     getRandomNumber,\r\n     handleNext,\r\n\r\n  };\r\n}\r\n\r\nexport default useShared;\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAE1C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC;IACzCM,UAAU,EAAG,CAAC;IACdC,YAAY,EAAG;EACjB,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC;IACnCU,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,SAASC,WAAWA,CAAA,EAAG;IACrBH,SAAS,CAAC;MACRC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE;IACb,CAAC,CAAC;EACL;EAEA,SAASE,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAE;IACjC,IAAIC,YAAY;IAChB,GAAG;MACDA,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIJ,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;IAClE,CAAC,QACME,YAAY,KAAG,CAAC;IAEvB,OAAOA,YAAY;EACrB;EAEA,MAAMI,UAAU,GAAIC,aAAa,IAAK;IACpCT,WAAW,CAAC,CAAC;IAGf,QAAQU,UAAU;MAChB,KAAK,CAAC;QACFC,kBAAkB,CAAC;UAACT,GAAG,EAAC,CAAC;UAAEC,GAAG,EAAC;QAAC,CAAC,CAAC;QACpC;MAEF,KAAK,CAAC;QACNQ,kBAAkB,CAAC;UAACT,GAAG,EAAC,CAAC;UAAEC,GAAG,EAAC;QAAE,CAAC,CAAC;QACjC;MAEF,KAAK,CAAC;QACJQ,kBAAkB,CAAC;UAACT,GAAG,EAAC,CAAC,CAAC;UAAEC,GAAG,EAAC;QAAC,CAAC,CAAC;QACrC;MAEA,KAAK,CAAC;QACJQ,kBAAkB,CAAC;UAACT,GAAG,EAAC,CAAC,CAAC;UAAEC,GAAG,EAAC;QAAC,CAAC,CAAC;QACvC;MAEE;QACEQ,kBAAkB,CAAC;UAACT,GAAG,EAAC,CAAC;UAAEC,GAAG,EAAC;QAAC,CAAC,CAAC;QAClC;IACJ;IAEA,GAAG;MACC,IAAIS,aAAa,GAAG,CAAC;MACrB,IAAIlB,UAAU,GAAGO,eAAe,CAACY,UAAU,CAACX,GAAG,EAAEW,UAAU,CAACV,GAAG,CAAC;MAChE,IAAIR,YAAY,GAAGM,eAAe,CAACY,UAAU,CAACX,GAAG,EAAEW,UAAU,CAACV,GAAG,CAAC;MAElE,IAAIT,UAAU,GAAG,CAAC,EAAEkB,aAAa,EAAE;MACnC,IAAIjB,YAAY,GAAG,CAAC,EAAEiB,aAAa,EAAE;;MAEpC;MACD,IAAIF,UAAU,KAAK,CAAC,IAAIE,aAAa,GAAC,CAAC,EAAE;QACvC,SAAS,CAAC;MACZ;IAEJ,CAAC,QAAQ,IAAI;IAEbnB,aAAa,CAAC;MACVC,UAAU,EAAEA,UAAU;MACtBC,YAAY,EAAEA;IAClB,CAAC,CAAC;IAEFmB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEvB,UAAU,CAAC;EAEhD,CAAC;;EAEH;;EAEA,OAAO;IACJA,UAAU;IACVC,aAAa;IACbG,MAAM;IACNC,SAAS;IACTG,WAAW;IACXC,eAAe;IACfO;EAEH,CAAC;AACH;AAACjB,EAAA,CA1FQD,SAAS;AA4FlB,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}