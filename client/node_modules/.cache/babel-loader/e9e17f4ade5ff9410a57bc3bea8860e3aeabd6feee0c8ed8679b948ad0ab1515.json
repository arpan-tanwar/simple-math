{"ast":null,"code":"var _jsxFileName = \"D:\\\\Freelancing\\\\simple-math\\\\client\\\\src\\\\component\\\\arithmetic\\\\arithmetic\\\\MathInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MathInput = ({\n  setInputs,\n  inputs,\n  type,\n  difficulty,\n  operation,\n  sameDenoms,\n  mathInputNull,\n  setMathInputNull\n}) => {\n  _s();\n  const [expression, setExpression] = useState('');\n  const [inputWidth, setInputWidth] = useState(20);\n  useEffect(() => {\n    if (mathInputNull) {\n      setExpression('');\n      setMathInputNull(false);\n    }\n  }, [difficulty, operation, sameDenoms, mathInputNull]);\n  const handleChange = event => {\n    const inputValue = event.target.value;\n    setInputWidth(inputValue);\n    setExpression(inputValue);\n    // Evaluate the expression and update the result\n    if (type === 'inputNum') {\n      try {\n        const evalResult = eval(inputValue); // Use of eval can be dangerous, make sure to validate the input\n\n        // setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\n        setInputs({\n          ...inputs,\n          inputNum: isNaN(evalResult) ? null : evalResult\n        });\n      } catch (error) {\n        setInputs({\n          ...inputs,\n          inputNum: null\n        });\n      }\n    }\n    if (type === 'inputDenom') {\n      try {\n        const evalResult = eval(inputValue); // Use of eval can be dangerous, make sure to validate the input\n\n        // setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\n        setInputs({\n          ...inputs,\n          inputDenom: isNaN(evalResult) ? null : evalResult\n        });\n      } catch (error) {\n        setInputs({\n          ...inputs,\n          inputDenom: null\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `input`,\n      style: {\n        width: `${inputWidth}px`,\n        maxWidth: '150px'\n      },\n      type: \"text\",\n      value: expression,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MathInput, \"mNGaX/P4LEk3OqOKRSmSTbemXDg=\");\n_c = MathInput;\nexport default MathInput;\nvar _c;\n$RefreshReg$(_c, \"MathInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MathInput","setInputs","inputs","type","difficulty","operation","sameDenoms","mathInputNull","setMathInputNull","_s","expression","setExpression","inputWidth","setInputWidth","handleChange","event","inputValue","target","value","evalResult","eval","inputNum","isNaN","error","inputDenom","className","children","style","width","maxWidth","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Freelancing/simple-math/client/src/component/arithmetic/arithmetic/MathInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MathInput = ({setInputs, inputs, type, difficulty, operation, sameDenoms, mathInputNull, setMathInputNull}) => {\r\n  const [expression, setExpression] = useState('');\r\n  const [inputWidth, setInputWidth] = useState(20);\r\n  \r\n  useEffect(() => {\r\n    \r\n\r\n    if(mathInputNull){\r\n      setExpression('')\r\n      setMathInputNull(false)\r\n\r\n    }\r\n    \r\n    \r\n }, [difficulty, operation, sameDenoms, mathInputNull])\r\n\r\n  const handleChange = (event) => {\r\n    const inputValue = event.target.value;\r\n    setInputWidth(inputValue)\r\n    setExpression(inputValue);\r\n    // Evaluate the expression and update the result\r\n    if(type==='inputNum'){\r\n      try {\r\n        const evalResult = eval(inputValue); // Use of eval can be dangerous, make sure to validate the input\r\n       \r\n       // setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\r\n        setInputs({...inputs, inputNum: isNaN(evalResult) ? null : evalResult })\r\n      } catch (error) {\r\n        setInputs({...inputs, inputNum:  null  })\r\n      }\r\n    }\r\n\r\n    if(type==='inputDenom'){\r\n      try {\r\n        const evalResult = eval(inputValue); // Use of eval can be dangerous, make sure to validate the input\r\n       \r\n       // setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\r\n        setInputs({...inputs, inputDenom: isNaN(evalResult) ? null : evalResult })\r\n      } catch (error) {\r\n        setInputs({...inputs, inputDenom:  null  })\r\n      }\r\n    }\r\n  \r\n\r\n  };\r\n\r\n  return (\r\n    <div className=''>\r\n      <input\r\n        className={`input`}\r\n        style={{ width: `${inputWidth}px`, maxWidth:'150px' }} \r\n        type=\"text\"\r\n        value={expression}\r\n       \r\n        onChange={handleChange}\r\n      />\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MathInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAACC,SAAS;EAAEC,MAAM;EAAEC,IAAI;EAAEC,UAAU;EAAEC,SAAS;EAAEC,UAAU;EAAEC,aAAa;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACnH,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IAGd,IAAGU,aAAa,EAAC;MACfI,aAAa,CAAC,EAAE,CAAC;MACjBH,gBAAgB,CAAC,KAAK,CAAC;IAEzB;EAGH,CAAC,EAAE,CAACJ,UAAU,EAAEC,SAAS,EAAEC,UAAU,EAAEC,aAAa,CAAC,CAAC;EAErD,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrCL,aAAa,CAACG,UAAU,CAAC;IACzBL,aAAa,CAACK,UAAU,CAAC;IACzB;IACA,IAAGb,IAAI,KAAG,UAAU,EAAC;MACnB,IAAI;QACF,MAAMgB,UAAU,GAAGC,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC;;QAEtC;QACCf,SAAS,CAAC;UAAC,GAAGC,MAAM;UAAEmB,QAAQ,EAAEC,KAAK,CAACH,UAAU,CAAC,GAAG,IAAI,GAAGA;QAAW,CAAC,CAAC;MAC1E,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdtB,SAAS,CAAC;UAAC,GAAGC,MAAM;UAAEmB,QAAQ,EAAG;QAAM,CAAC,CAAC;MAC3C;IACF;IAEA,IAAGlB,IAAI,KAAG,YAAY,EAAC;MACrB,IAAI;QACF,MAAMgB,UAAU,GAAGC,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC;;QAEtC;QACCf,SAAS,CAAC;UAAC,GAAGC,MAAM;UAAEsB,UAAU,EAAEF,KAAK,CAACH,UAAU,CAAC,GAAG,IAAI,GAAGA;QAAW,CAAC,CAAC;MAC5E,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdtB,SAAS,CAAC;UAAC,GAAGC,MAAM;UAAEsB,UAAU,EAAG;QAAM,CAAC,CAAC;MAC7C;IACF;EAGF,CAAC;EAED,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,EAAE;IAAAC,QAAA,eACf3B,OAAA;MACE0B,SAAS,EAAG,OAAO;MACnBE,KAAK,EAAE;QAAEC,KAAK,EAAG,GAAEhB,UAAW,IAAG;QAAEiB,QAAQ,EAAC;MAAQ,CAAE;MACtD1B,IAAI,EAAC,MAAM;MACXe,KAAK,EAAER,UAAW;MAElBoB,QAAQ,EAAEhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA3DIT,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA6Df,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}