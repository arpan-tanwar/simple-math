{"ast":null,"code":"var _jsxFileName = \"D:\\\\Freelancing\\\\simple-math\\\\client\\\\src\\\\component\\\\arithmetic\\\\efractions\\\\Fraction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Fraction1 from './Fraction1';\nimport Fraction2 from './Fraction2';\nimport Fraction3 from './Fraction3';\nimport Fraction4 from './Fraction4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fraction = ({\n  efraction,\n  difficulty2,\n  btnFracNextRef\n}) => {\n  _s();\n  const [randomFrac, setRandomFrac] = useState({\n    numerator: 1,\n    denominator: 1\n  });\n  const [inputs, setInputs] = useState({\n    inputNum: 2,\n    inputDenom: 3\n  });\n  const [inputRange, setInputRange] = useState({\n    min: 1,\n    max: 9\n  });\n  function clearInputs() {\n    setInputs({\n      inputNum: null,\n      inputDenom: null\n    });\n  }\n  useEffect(() => {\n    handleNext(difficulty2);\n  }, [difficulty2]);\n  function getRandomNumber(min, max) {\n    let randomNumber;\n    do {\n      randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n    } while (randomNumber === 0);\n    return randomNumber;\n  }\n  function getMultiplyNumber() {\n    return Math.floor(Math.random() * 3) + 2;\n  }\n  const handleNext = difficulty2 => {\n    clearInputs();\n    switch (difficulty2) {\n      case 1:\n        setInputRange({\n          min: 1,\n          max: 9\n        });\n        break;\n      case 2:\n        setInputRange({\n          min: 1,\n          max: 30\n        });\n        break;\n      case 3:\n        setInputRange({\n          min: -9,\n          max: 9\n        });\n        break;\n      case 4:\n        setInputRange({\n          min: -9,\n          max: 9\n        });\n        break;\n      default:\n        setInputRange({\n          min: 1,\n          max: 9\n        });\n        break;\n    }\n    var numerator = getRandomNumber(inputRange.min, inputRange.max);\n    var denominator = getRandomNumber(inputRange.min, inputRange.max);\n    do {\n      var negativeCount = 0;\n      var numerator1 = getRandomNumber(inputRange.min, inputRange.max);\n      var denominator1 = getRandomNumber(inputRange.min, inputRange.max);\n      if (numerator1 < 0) negativeCount++;\n      if (denominator1 < 0) negativeCount++;\n      if (difficulty2 === 3) {\n        if (negativeCount < 2) {\n          console.log(\"count < 2\", negativeCount);\n          break;\n        } else {\n          console.log(\"count continue \", negativeCount);\n          continue;\n        }\n      } else {\n        break;\n      }\n\n      // Check if difficulty is 3 and there are more than 1 negative numbers\n      // if (difficulty2 === 3 && negativeCount>1) {\n      //   continue; // Skip this iteration and generate new numbers\n\n      // }    \n\n      // if(difficulty2===3 && negativeCount<2){\n      //   break;\n\n      // }\n    } while (true);\n    if (numerator < 0 && denominator < 0) {\n      console.log(\"both are negative\");\n    }\n    setRandomFrac({\n      numerator: numerator,\n      denominator: denominator\n    });\n  };\n  const multiplyNumber = getMultiplyNumber();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"math  flex justify-start  mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => console.log(difficulty2, randomFrac, inputRange),\n            children: \"show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), efraction === 1 && /*#__PURE__*/_jsxDEV(Fraction1, {\n            randomFrac: randomFrac,\n            multiplyNumber: multiplyNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 39\n          }, this), efraction === 2 && /*#__PURE__*/_jsxDEV(Fraction2, {\n            randomFrac: randomFrac\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 39\n          }, this), efraction === 3 && /*#__PURE__*/_jsxDEV(Fraction3, {\n            randomFrac: randomFrac,\n            multiplyNumber: multiplyNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 39\n          }, this), efraction === 4 && /*#__PURE__*/_jsxDEV(Fraction4, {\n            randomFrac: randomFrac,\n            multiplyNumber: multiplyNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons w-full  flex flex-row justify-start mt-14\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-drill\",\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleNext(difficulty2),\n            ref: btnFracNextRef,\n            className: \"btn-drill ml-1 md:ml-3\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Fraction, \"0Yu9k6EdvXIIVKc0pQrzfB/u7X0=\");\n_c = Fraction;\nexport default Fraction;\nvar _c;\n$RefreshReg$(_c, \"Fraction\");","map":{"version":3,"names":["React","useState","useEffect","Fraction1","Fraction2","Fraction3","Fraction4","jsxDEV","_jsxDEV","Fraction","efraction","difficulty2","btnFracNextRef","_s","randomFrac","setRandomFrac","numerator","denominator","inputs","setInputs","inputNum","inputDenom","inputRange","setInputRange","min","max","clearInputs","handleNext","getRandomNumber","randomNumber","Math","floor","random","getMultiplyNumber","negativeCount","numerator1","denominator1","console","log","multiplyNumber","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/Freelancing/simple-math/client/src/component/arithmetic/efractions/Fraction.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Fraction1 from './Fraction1'\r\nimport Fraction2 from './Fraction2'\r\nimport Fraction3 from './Fraction3'\r\nimport Fraction4 from './Fraction4'\r\n\r\n\r\n\r\nconst Fraction = ({efraction, difficulty2, btnFracNextRef}) => {\r\n\r\n  \r\n\r\n  \r\n \r\n  const [randomFrac, setRandomFrac] = useState({\r\n    numerator : 1,\r\n    denominator : 1\r\n  })\r\n\r\n  const [inputs, setInputs] = useState({\r\n    inputNum: 2,\r\n    inputDenom: 3\r\n  })\r\n\r\n  const [inputRange, setInputRange] = useState({\r\n    min: 1,\r\n    max: 9\r\n  })\r\n\r\n\r\n  function clearInputs() {\r\n    setInputs({\r\n      inputNum: null,\r\n      inputDenom: null\r\n     })\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleNext(difficulty2)\r\n  }, [difficulty2]);\r\n\r\n  function getRandomNumber(min, max) {\r\n    let randomNumber;\r\n    do {\r\n      randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    } \r\n    while (randomNumber===0)\r\n    \r\n    return randomNumber;\r\n  }\r\n\r\n  \r\n  function  getMultiplyNumber() {\r\n    return Math.floor(Math.random() * 3) + 2;\r\n  }\r\n  \r\n\r\n\r\n\r\n  const handleNext = (difficulty2) => {\r\n    clearInputs()\r\n  \r\n  switch (difficulty2) {\r\n    case 1: \r\n        setInputRange({min:1, max:9});\r\n      break;\r\n\r\n    case 2:    \r\n    setInputRange({min:1, max:30});\r\n      break;\r\n\r\n    case 3:\r\n      setInputRange({min:-9, max:9});\r\n    break;\r\n\r\n    case 4:\r\n      setInputRange({min:-9, max:9});\r\n  break;\r\n\r\n    default:\r\n      setInputRange({min:1, max:9});\r\n      break;\r\n  }\r\n\r\n  var numerator = getRandomNumber(inputRange.min, inputRange.max);\r\n  var denominator = getRandomNumber(inputRange.min, inputRange.max);\r\n \r\n  do {\r\n      var negativeCount = 0;\r\n      var numerator1 = getRandomNumber(inputRange.min, inputRange.max);\r\n      var denominator1 = getRandomNumber(inputRange.min, inputRange.max);\r\n\r\n      if (numerator1 < 0) negativeCount++;\r\n      if (denominator1 < 0) negativeCount++;\r\n\r\n      if(difficulty2===3){\r\n        if(negativeCount<2){\r\n             console.log(\"count < 2\", negativeCount)\r\n             break;\r\n        }\r\n        else{\r\n          console.log(\"count continue \", negativeCount)\r\n          continue;\r\n        }\r\n      }\r\n      else{\r\n        break;\r\n      }\r\n\r\n      \r\n\r\n       // Check if difficulty is 3 and there are more than 1 negative numbers\r\n      // if (difficulty2 === 3 && negativeCount>1) {\r\n      //   continue; // Skip this iteration and generate new numbers\r\n       \r\n      // }    \r\n      \r\n      // if(difficulty2===3 && negativeCount<2){\r\n      //   break;\r\n       \r\n      // }\r\n     \r\n  } while (true);\r\n\r\n  if(numerator<0 && denominator<0){\r\n    console.log(\"both are negative\")\r\n  }\r\n\r\n  setRandomFrac({\r\n      numerator: numerator,\r\n      denominator: denominator\r\n  });\r\n\r\n  \r\n\r\n  \r\n}\r\n\r\n const multiplyNumber = getMultiplyNumber()\r\n  \r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div className='flex flex-col'>\r\n        <div className='math  flex justify-start  mt-2'>\r\n              <div>\r\n                  <div>\r\n                    <button onClick={()=>console.log(difficulty2, randomFrac, inputRange)}>show</button>\r\n                    {efraction===1 && <Fraction1 randomFrac={randomFrac} multiplyNumber={multiplyNumber}/>}    \r\n                    {efraction===2 && <Fraction2 randomFrac={randomFrac} />}   \r\n                    {efraction===3 && <Fraction3 randomFrac={randomFrac} multiplyNumber={multiplyNumber}/>} \r\n                    {efraction===4 && <Fraction4 randomFrac={randomFrac} multiplyNumber={multiplyNumber}/>}         \r\n                                       \r\n                                            \r\n                  </div>\r\n                                \r\n                  \r\n\r\n                  <div className='buttons w-full  flex flex-row justify-start mt-14'>\r\n                    <button  className='btn-drill'>Check</button>\r\n\r\n                    <button onClick={()=>handleNext(difficulty2)} ref={btnFracNextRef}  className='btn-drill ml-1 md:ml-3'>Next</button>\r\n                  </div>\r\n              </div>   \r\n        </div>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Fraction\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}