{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const MathInputDec=_ref=>{let{setInputs,inputs,type,mathInputNull,setMathInputNull}=_ref;const[expression,setExpression]=useState('');const[inputWidth,setInputWidth]=useState('w-10 sm:w-20');useEffect(()=>{if(mathInputNull){setExpression('');setMathInputNull(false);setInputWidth('w-10 sm:w-20');}},[mathInputNull,inputWidth]);const getTextWidth=length=>{if(length<5){setInputWidth('w-10 sm:w-20');}if(length>=5&&length<8){setInputWidth('w-10 sm:w-28');}if(length>=8&&length<11){setInputWidth('w-10 sm:w-36');}if(length>=11&&length<14){setInputWidth('w-10 sm:w-48');}if(length>14){setInputWidth('w-10 sm:w-60');}};const handleChange=event=>{const inputValue=event.target.value;getTextWidth(inputValue.length);setExpression(inputValue);// Evaluate the expression and update the result\nif(type==='inputsNum'){try{const evalResult=eval(inputValue);// Use of eval can be dangerous, make sure to validate the input\n// setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\nsetInputs({...inputs,inputsNum:isNaN(evalResult)?null:evalResult});}catch(error){setInputs({...inputs,inputsNum:null});}}if(type==='inputsDenom'){try{const evalResult=eval(inputValue);// Use of eval can be dangerous, make sure to validate the input\n// setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\nsetInputs({...inputs,inputsDenom:isNaN(evalResult)?null:evalResult});}catch(error){setInputs({...inputs,inputsDenom:null});}}if(type==='numerator3'){try{const evalResult=eval(inputValue);// Use of eval can be dangerous, make sure to validate the input\n// setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\nsetInputs({...inputs,numerator3:isNaN(evalResult)?null:evalResult});}catch(error){setInputs({...inputs,numerator3:null});}}if(type==='denominator3'){try{const evalResult=eval(inputValue);// Use of eval can be dangerous, make sure to validate the input\n// setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\nsetInputs({...inputs,denominator3:isNaN(evalResult)?null:evalResult});}catch(error){setInputs({...inputs,denominator3:null});}}};return/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsx(\"input\",{className:\"text-[14px] md:text-[22px] text-center h-5 md:h-8  bg-transparent border border-gray-400 rounded-[5px]   \".concat(inputWidth),type:\"text\",value:expression,onChange:handleChange})});};export default MathInputDec;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","MathInputDec","_ref","setInputs","inputs","type","mathInputNull","setMathInputNull","expression","setExpression","inputWidth","setInputWidth","getTextWidth","length","handleChange","event","inputValue","target","value","evalResult","eval","inputsNum","isNaN","error","inputsDenom","numerator3","denominator3","className","children","concat","onChange"],"sources":["/Users/arpan/Documents/GitHub/simple-math/client/src/component/arithmetic/efractions/MathInputDec.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MathInputDec = ({setInputs, inputs,type,   mathInputNull, setMathInputNull}) => {\n  const [expression, setExpression] = useState('');\n  const [inputWidth, setInputWidth] = useState('w-10 sm:w-20');\n  \n  useEffect(() => {\n    \n\n    if(mathInputNull){\n      setExpression('')\n      setMathInputNull(false)\n      setInputWidth('w-10 sm:w-20')\n\n    }\n    \n    \n }, [ mathInputNull, inputWidth])\n\n const getTextWidth = (length) => {\n   if(length<5){\n    setInputWidth('w-10 sm:w-20')\n   }\n   if(length>=5 && length<8){\n    setInputWidth('w-10 sm:w-28')\n   }\n   if(length>=8 && length<11){\n    setInputWidth('w-10 sm:w-36')\n   }\n   if(length>=11 && length<14){\n    setInputWidth('w-10 sm:w-48')\n   }\n   if(length>14){\n    setInputWidth('w-10 sm:w-60')\n   }\n};\n\n\n  const handleChange = (event) => {\n    const inputValue = event.target.value;\n    getTextWidth(inputValue.length)\n    setExpression(inputValue);\n    // Evaluate the expression and update the result\n\n    if(type==='inputsNum'){\n      try {\n        const evalResult = eval(inputValue); // Use of eval can be dangerous, make sure to validate the input\n       \n       // setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\n        setInputs({...inputs, inputsNum: isNaN(evalResult) ? null : evalResult })\n      } catch (error) {\n        setInputs({...inputs, inputsNum:  null  })\n      }\n    }\n\n    if(type==='inputsDenom'){\n      try {\n        const evalResult = eval(inputValue); // Use of eval can be dangerous, make sure to validate the input\n       \n       // setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\n        setInputs({...inputs, inputsDenom: isNaN(evalResult) ? null : evalResult })\n      } catch (error) {\n        setInputs({...inputs, inputsDenom:  null  })\n      }\n    }\n\n    if(type==='numerator3'){\n        try {\n          const evalResult = eval(inputValue); // Use of eval can be dangerous, make sure to validate the input\n         \n         // setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\n          setInputs({...inputs, numerator3: isNaN(evalResult) ? null : evalResult })\n        } catch (error) {\n          setInputs({...inputs, numerator3:  null  })\n        }\n      }\n  \n      if(type==='denominator3'){\n        try {\n          const evalResult = eval(inputValue); // Use of eval can be dangerous, make sure to validate the input\n         \n         // setResult(isNaN(evalResult) ? null : evalResult); // Check if the result is a valid number\n          setInputs({...inputs, denominator3: isNaN(evalResult) ? null : evalResult })\n        } catch (error) {\n          setInputs({...inputs, denominator3:  null  })\n        }\n      }\n  \n\n  };\n\n  return (\n    <div className=''>\n      <input\n        className={`text-[14px] md:text-[22px] text-center h-5 md:h-8  bg-transparent border border-gray-400 rounded-[5px]   ${inputWidth}`}\n        type=\"text\"\n        value={expression}\n        onChange={handleChange}\n      />\n    \n    </div>\n  );\n};\n\nexport default MathInputDec;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}