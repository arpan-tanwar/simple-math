{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import CheckModal from'./CheckModal';import SolutionModal from'./SolutionModal';import MathArrayInput from'./MathArrayInput';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RandomSheets=_ref=>{let{getRandomNumber,showRandomSheets,totalSheets,setShowRandom,operation,difficulty,inputRange,additionInputs,setAdditionInputs,sameDenoms}=_ref;let sheets=totalSheets;let DivisionResult=[];const[randomSheetArray,setRandomSheetArray]=useState([]);const[divisionInputs,setDivisionInputs]=useState([]);const[divisionArrayResult,setDivisionArrayResult]=useState([]);const[showCheckModal,setShowCheckModal]=useState(false);const[showSolutionModal,setShowSolutionModal]=useState(false);const[showSubmitResultModal,setShowSubmitResultModal]=useState(false);const[submitted,setSubmitted]=useState(false);const[arrayResult,setArrayResult]=useState(false);const[submitResult,setSubmitResult]=useState(0);const[objectSubmitCount,setObjectSubmitCount]=useState(0);const mixOperation=0;const[inputs,setInputs]=useState(randomSheetArray.map(()=>({numerator:1,denominator:1})));useEffect(()=>{handleRandomSheets(sheets);setSubmitted(false);setObjectSubmitCount(0);setSubmitResult(0);},[totalSheets,showRandomSheets,showSolutionModal,difficulty,operation,sameDenoms]);const handleArrayCheck=(randomNums,i)=>{console.log(\"both index are \",i,divisionInputs[i].ind,randomNums);setObjectSubmitCount(objectSubmitCount+1);const{numerator1,denominator1,numerator2,denominator2,showSolutionBtn}=randomNums.randomNums;if(operation===1||randomNums.randomNums.mixOperation===1){if(sameDenoms){const checkDeno=denominator1;const checkNum=numerator1+numerator2;var checkResult=checkNum/checkDeno;}else{const checkDeno=denominator1*denominator2;const checkNum=numerator1*denominator2+numerator2*denominator1;if(parseInt(additionInputs.numerator1)===denominator2&&parseInt(additionInputs.denominator1)===denominator2&&parseInt(additionInputs.numerator2)===denominator1&&parseInt(additionInputs.denominator2)===denominator1){var checkResult=checkNum/checkDeno;}else{var checkResult=checkNum;}}}if(operation===2||randomNums.randomNums.mixOperation===2){if(sameDenoms){const checkDeno=denominator1;const checkNum=numerator1-numerator2;var checkResult=checkNum/checkDeno;}else{const checkDeno=denominator1*denominator2;const checkNum=numerator1*denominator2-numerator2*denominator1;if(parseInt(additionInputs.numerator1)===denominator2&&parseInt(additionInputs.denominator1)===denominator2&&parseInt(additionInputs.numerator2)===denominator1&&parseInt(additionInputs.denominator2)===denominator1){var checkResult=checkNum/checkDeno;}else{var checkResult=checkNum;}}}if(operation===3||randomNums.randomNums.mixOperation===3){const checkNum=numerator1*numerator2;const checkDeno=denominator1*denominator2;var checkResult=checkNum/checkDeno;}if(operation===4||randomNums.randomNums.mixOperation===4){console.log(\"whole object \",divisionInputs[i],\"operation\",operation,randomNums.randomNums.mixOperation);const{divisionNum1,divisionDenom1,divisionNum2,divisionDenom2,sign}=divisionInputs[i];if(difficulty===1){var deno2=divisionDenom2;var num2=divisionNum2;console.log(numerator2,deno2,denominator2,num2,divisionInputs[i].sign);if(numerator2===divisionDenom2&&denominator2===divisionNum2&&sign==='*'){const updatedArray=randomSheetArray.map((item,index)=>{// Check if the index matches the index of the item to update\nif(index===i){console.log(\"true is hit\",index,i);// Return a new object with updated properties\nreturn{...item,isSubmitted:true,objectResult:true,showSolutionModal:false};}// Return the original object if it's not the one to update\nreturn item;});// Update the state with the updated array\nsetDivisionArrayResult(prevArray=>{const newArray=[...prevArray];newArray[i]={index:i,objectResult:true};return newArray;});setRandomSheetArray(updatedArray);setSubmitResult(submitResult+1);}else{const updatedArray=randomSheetArray.map((item,index)=>{if(index===i){// If the properties match, return a new object with the updated \nreturn{...item,isSubmitted:true,objectResult:false,showSolutionModal:false};}// If the properties don't match, return the original object\nreturn item;});setDivisionArrayResult(prevArray=>{const newArray=[...prevArray];newArray[i]={index:i,objectResult:false};return newArray;});setRandomSheetArray(updatedArray);}}if(difficulty>1){var deno2=divisionDenom2;var num2=divisionNum2;var deno1=divisionDenom1;var num1=divisionNum1;if(numerator2===deno2&&denominator2===num2&&numerator1===num1&&denominator1===deno1&&divisionInputs[i].sign==='*'||numerator1===deno1&&denominator1===num1&&numerator2===num2&&denominator2===deno2&&divisionInputs[i].sign==='*'){console.log(\"true is hit\");const updatedArray=randomSheetArray.map((item,index)=>{// Check if the index matches the index of the item to update\nif(index===i){// Return a new object with updated properties\nreturn{...item,isSubmitted:true,objectResult:true,showSolutionModal:false};}// Return the original object if it's not the one to update\nreturn item;});// Update the state with the updated array\nsetDivisionArrayResult(prevArray=>{const newArray=[...prevArray];newArray[i]={index:i,objectResult:true};return newArray;});setRandomSheetArray(updatedArray);setSubmitResult(submitResult+1);}else{console.log(\"false is hit\");const updatedArray=randomSheetArray.map((item,index)=>{if(index===i){// If the properties match, return a new object with the updated \nreturn{...item,isSubmitted:true,objectResult:false,showSolutionModal:false};}// If the properties don't match, return the original object\nreturn item;});setDivisionArrayResult(prevArray=>{const newArray=[...prevArray];newArray[i]={index:i,objectResult:false};return newArray;});setRandomSheetArray(updatedArray);}}}//   if (operation === 4 || randomNums.randomNums.mixOperation ===4) {\n//     var inputResult = randomNums.randomNums.inputNum / randomNums.randomNums.inputDenom;\n//     console.log(inputResult)\n//      var newCheckResult = parseFloat(checkResult).toFixed(2);\n//      var newInputResult = parseFloat(inputResult).toFixed(2)\n//      console.log(randomNums.randomNums.numerator2,divisionInputs[i].divisionDenom2, randomNums.randomNums.denominator2,divisionInputs[i].divisionNum2)\n//     if (\n//       randomNums.randomNums.numerator2 === divisionInputs[i].divisionDenom2 &&\n//       randomNums.randomNums.denominator2 === divisionInputs[i].divisionNum2 &&\n//       divisionInputs[i].sign === '*'\n//     ) {\n//         const updatedArray = randomSheetArray.map((item, index) => {\n//           // Compare properties of the objects to determine if they are equal\n//           if (index===i) {\n//               // If the properties match, return a new object with the updated \n//               return { ...item, isSubmitted:true, objectResult: true, showSolutionModal: false };\n//           }\n//           // If the properties don't match, return the original object\n//           return item;\n//       });\n//       setDivisionArrayResult((prevArray) => {\n//         const newArray = [...prevArray];\n//         newArray[i] = { index: i, objectResult: true };\n//         return newArray;\n//       });\n//       setRandomSheetArray(updatedArray);\n//       setSubmitResult(submitResult+1)\n//     } else {\n//       const updatedArray = randomSheetArray.map((item, index)=> {\n//         // Compare properties of the objects to determine if they are equal\n//         if (index===i) {\n//             // If the properties match, return a new object with the updated \n//             return { ...item, isSubmitted: true, objectResult: false, showSolutionModal: false };\n//         }\n//         // If the properties don't match, return the original object\n//         return item;\n//     });\n//     setDivisionArrayResult((prevArray) => {\n//       const newArray = [...prevArray];\n//       newArray[i] = { index: i, objectResult: false };\n//       return newArray;\n//     });\n//     setRandomSheetArray(updatedArray);\n//     }\n// }\nif(operation!==4||randomNums.randomNums.mixOperation!==4){var inputResult=randomNums.randomNums.inputNum/randomNums.randomNums.inputDenom;console.log(inputResult);var newCheckResult=parseFloat(checkResult).toFixed(2);var newInputResult=parseFloat(inputResult).toFixed(2);if(newCheckResult===newInputResult){const updatedArray=randomSheetArray.map((item,index)=>{// Compare properties of the objects to determine if they are equal\nif(index===i){// If the properties match, return a new object with the updated \nreturn{...item,isSubmitted:true,objectResult:true,showSolutionModal:false};}// If the properties don't match, return the original object\nreturn item;});setRandomSheetArray(updatedArray);setSubmitResult(submitResult+1);if(operation===0){setDivisionArrayResult(prevArray=>{const newArray=[...prevArray];newArray[i]={index:i,objectResult:true};return newArray;});}}else{const updatedArray=randomSheetArray.map((item,index)=>{// Compare properties of the objects to determine if they are equal\nif(index===i){// If the properties match, return a new object with the updated \nreturn{...item,isSubmitted:true,objectResult:false,showSolutionModal:false};}// If the properties don't match, return the original object\nreturn item;});setRandomSheetArray(updatedArray);if(operation===0){setDivisionArrayResult(prevArray=>{const newArray=[...prevArray];newArray[i]={index:i,objectResult:false};return newArray;});}}}};const handleSubmitSheets=()=>{if(operation===4||mixOperation===4){function countTrueValues(array){const trueValues=array.filter(item=>item.objectResult===true);return trueValues.length;}setSubmitResult(countTrueValues(divisionArrayResult));}// if(operation===0){\n//   function countTrueValues(array) {\n//     const trueValues = array.filter(item => item.objectResult === true);\n//      return trueValues.length;   }\n//     setSubmitResult(countTrueValues(divisionArrayResult))\n// }\nsetSubmitted(true);setShowSubmitResultModal(true);};const handleShowSolutionModal=index=>{// Create a copy of the randomNums array\nconst updatedRandomNums=[...randomSheetArray];// Set the showSolutionModal property of the specific object to true\nupdatedRandomNums[index]={...updatedRandomNums[index],showSolutionModal:true};// Update the state with the modified array\nsetRandomSheetArray(updatedRandomNums);};const handleCloseSolutionModal=index=>{// Create a copy of the randomNums array\nconst updatedRandomNums=[...randomSheetArray];// Set the showSolutionModal property of the specific object to true\nupdatedRandomNums[index]={...updatedRandomNums[index],showSolutionModal:false};// Update the state with the modified array\nsetRandomSheetArray(updatedRandomNums);};const handleRandomSheets=sheets=>{const updatedArray=[];const updatedDivisionInputs=[];const getRandomOperation=()=>{let randomNum;do{randomNum=Math.floor(Math.random()*4)+1;}while(randomNum===3);return randomNum;};let mixOperation;for(let i=0;i<sheets;i++){if(operation===0){mixOperation=getRandomOperation();console.log(\"mix operation in array\",mixOperation);}const numerator1=getRandomNumber(inputRange.min,inputRange.max);const denominator1=getRandomNumber(inputRange.min,inputRange.max);const numerator2=getRandomNumber(inputRange.min,inputRange.max);const denominator2=getRandomNumber(inputRange.min,inputRange.max);updatedArray.push({numerator1,denominator1,numerator2,denominator2,mixOperation,inputNum:'',inputDenom:'',isSubmitted:false,objectResult:false});updatedDivisionInputs.push({ind:i,divisionNum1:'',divisionDenom1:'',divisionNum2:'',divisionDenom2:'',sign:''});}setRandomSheetArray(updatedArray);setDivisionInputs(updatedDivisionInputs);console.log(\"checking divisioninputs in \",divisionInputs);};const handleDivisionInputsChange=(index,field,value)=>{const updatedInputs=[...divisionInputs];updatedInputs[index]={...updatedInputs[index],[field]:value};setDivisionInputs(updatedInputs);};// const handleDivisionInputsChange = (index, field, event) => {\n//   // Make a copy of the array\n//   const updatedInputs = [...divisionInputs];\n//   // Update the field in the object at the given index\n//   updatedInputs[index] = {\n//     ...updatedInputs[index],\n//     [field]: event.target.value\n//   };\n//   // Update the state\n//   setDivisionInputs(updatedInputs);\n// };\nif(showRandomSheets)return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col justify-center  rounded-md \",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-auto flex flex-col  gap-4 \",children:[randomSheetArray.map((randomNums,index)=>{var _divisionArrayResult$;return/*#__PURE__*/_jsxs(\"div\",{className:\"px-[8px] sm:px-[15px] md:px-[40px] pt-1 sm:pt-2  md:pt-4 pb-2  md:pb-4 mt-3 md:mt-6 bg-gray-50 rounded-md\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white w-5 h-5 md:w-10 md:h-10 rounded-full flex items-center justify-center mb-2 md:mb-4\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-gray-500 italic text-[12px] md:text-[18px]\",children:index+1})}),operation===4||randomNums.mixOperation===4?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-start   \",children:[difficulty===1&&/*#__PURE__*/_jsx(\"table\",{className:\"digit \",children:/*#__PURE__*/_jsxs(\"tr\",{className:\"\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"first-col px-2\",children:/*#__PURE__*/_jsx(\"table\",{className:\"\",children:/*#__PURE__*/_jsxs(\"tbody\",{className:\"\",children:[/*#__PURE__*/_jsx(\"tr\",{className:\"\",children:randomNums.numerator1}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line\"})}),/*#__PURE__*/_jsx(\"tr\",{children:randomNums.denominator1})]})})}),/*#__PURE__*/_jsx(\"td\",{className:\"opertor px-1 md:px-4\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:operation>0?/*#__PURE__*/_jsxs(\"tr\",{children:[operation===1&&/*#__PURE__*/_jsx(\"h2\",{children:\"+\"}),operation===2&&/*#__PURE__*/_jsx(\"h2\",{children:\"-\"}),operation===3&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xD7\"}),operation===4&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xF7\"})]}):/*#__PURE__*/_jsxs(\"tr\",{children:[randomNums.mixOperation===1&&/*#__PURE__*/_jsx(\"h2\",{children:\"+\"}),randomNums.mixOperation===2&&/*#__PURE__*/_jsx(\"h2\",{children:\"-\"}),randomNums.mixOperation===3&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xD7\"}),randomNums.mixOperation===4&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xF7\"})]})})})}),/*#__PURE__*/_jsx(\"td\",{className:\"second-col px-2\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:randomNums.numerator2}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line\"})}),/*#__PURE__*/_jsx(\"tr\",{children:operation<3&&sameDenoms?randomNums.denominator1:randomNums.denominator2})]})})}),/*#__PURE__*/_jsx(\"td\",{className:\"= px-1 md:px-6\",children:/*#__PURE__*/_jsx(\"tr\",{children:\"=\"})}),/*#__PURE__*/_jsxs(\"td\",{className:\"inputs md:px-4 flex flex-row  items-center\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"first-col px-2 md:px-4\",children:/*#__PURE__*/_jsx(\"table\",{className:\"\",children:/*#__PURE__*/_jsxs(\"tbody\",{className:\"\",children:[/*#__PURE__*/_jsx(\"tr\",{className:\"\",children:randomNums.numerator1}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line\"})}),/*#__PURE__*/_jsx(\"tr\",{children:randomNums.denominator1})]})})}),/*#__PURE__*/_jsx(\"td\",{className:\"opertor px-2 md:px-4  flex items-center\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{className:\"\",children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{className:\"text-center\",children:[\" \",/*#__PURE__*/_jsx(\"input\",{onChange:e=>handleDivisionInputsChange(index,'sign',e.target.value),id:\"sign\",className:\"input-div digit-input text-center\"})]})})})})}),/*#__PURE__*/_jsx(\"td\",{className:\"second-col md:px-4\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"\",children:/*#__PURE__*/_jsx(\"input\",{onChange:e=>handleDivisionInputsChange(index,'divisionNum2',parseInt(e.target.value)),id:\"divisionNum2\",className:\"input digit-input\"})}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line-input\"})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"input\",{onChange:e=>handleDivisionInputsChange(index,'divisionDenom2',parseInt(e.target.value)),id:\"divisionDenom2\",className:\"input digit-input\"})})]})})})]})]})}),difficulty>1&&/*#__PURE__*/_jsx(\"table\",{className:\"digit\",children:/*#__PURE__*/_jsxs(\"tr\",{className:\"\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"first-col\",children:/*#__PURE__*/_jsx(\"table\",{className:\"\",children:/*#__PURE__*/_jsxs(\"tbody\",{className:\"\",children:[/*#__PURE__*/_jsx(\"tr\",{className:\"\",children:randomNums.numerator1}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line\"})}),/*#__PURE__*/_jsx(\"tr\",{children:randomNums.denominator1})]})})}),/*#__PURE__*/_jsx(\"td\",{className:\"opertor px-2 md:px-4\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:operation>0?/*#__PURE__*/_jsxs(\"tr\",{children:[operation===1&&/*#__PURE__*/_jsx(\"h2\",{children:\"+\"}),operation===2&&/*#__PURE__*/_jsx(\"h2\",{children:\"-\"}),operation===3&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xD7\"}),operation===4&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xF7\"})]}):/*#__PURE__*/_jsxs(\"tr\",{children:[randomNums.mixOperation===1&&/*#__PURE__*/_jsx(\"h2\",{children:\"+\"}),randomNums.mixOperation===2&&/*#__PURE__*/_jsx(\"h2\",{children:\"-\"}),randomNums.mixOperation===3&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xD7\"}),randomNums.mixOperation===4&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xF7\"})]})})})}),/*#__PURE__*/_jsx(\"td\",{className:\"second-col md:px-4\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:randomNums.numerator2}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line\"})}),/*#__PURE__*/_jsx(\"tr\",{children:operation<3&&sameDenoms?randomNums.denominator1:randomNums.denominator2})]})})}),/*#__PURE__*/_jsx(\"td\",{className:\"= px-2 md:px-6\",children:/*#__PURE__*/_jsx(\"tr\",{children:\"=\"})}),/*#__PURE__*/_jsxs(\"td\",{className:\"inputs md:px-4 flex flex-row items-center\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"first-col md:px-4\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"\",children:/*#__PURE__*/_jsx(\"input\",{onChange:e=>handleDivisionInputsChange(index,'divisionNum1',parseInt(e.target.value)),id:\"divisionNum1\",className:\"input digit-input\"})}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line-input\"})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"input\",{onChange:e=>handleDivisionInputsChange(index,'divisionDenom1',parseInt(e.target.value)),id:\"divisionDenom1\",className:\"input digit-input\"})})]})})}),/*#__PURE__*/_jsx(\"td\",{className:\"opertor px-2 md:px-4  flex items-center\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{className:\"\",children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{className:\"text-center\",children:[\" \",/*#__PURE__*/_jsx(\"input\",{onChange:e=>handleDivisionInputsChange(index,'sign',e.target.value),id:\"divisionSign\",className:\"input-div digit-input text-center\"})]})})})})}),/*#__PURE__*/_jsx(\"td\",{className:\"second-col md:px-4\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"\",children:/*#__PURE__*/_jsx(\"input\",{onChange:e=>handleDivisionInputsChange(index,'divisionNum2',parseInt(e.target.value)),id:\"divisionNum2\",className:\"input digit-input\"})}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line-input\"})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"input\",{onChange:e=>handleDivisionInputsChange(index,'divisionDenom2',parseInt(e.target.value)),id:\"divisionDenom2\",className:\"input digit-input\"})})]})})})]})]})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"digit  pl-0 pr-0 justify-start\",children:/*#__PURE__*/_jsx(\"table\",{className:\"\",children:/*#__PURE__*/_jsxs(\"tr\",{className:\"\",children:[/*#__PURE__*/_jsxs(\"td\",{className:\"first-col flex flex-row justify-start \",children:[/*#__PURE__*/_jsx(\"table\",{className:\"\",children:/*#__PURE__*/_jsxs(\"tbody\",{className:\"\",children:[/*#__PURE__*/_jsx(\"tr\",{className:\"\",children:randomNums.numerator1}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line\"})}),/*#__PURE__*/_jsx(\"tr\",{children:randomNums.denominator1})]})}),operation<3&&!sameDenoms&&/*#__PURE__*/_jsxs(\"div\",{className:\"md:ml-4 flex flex-row\",children:[/*#__PURE__*/_jsx(\"table\",{className:\"flex items-center\",children:/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"tr\",{className:\"tr-different-deno\",children:/*#__PURE__*/_jsx(\"td\",{children:\"\\xD7\"})})})}),/*#__PURE__*/_jsx(\"table\",{className:\"\",children:/*#__PURE__*/_jsxs(\"tbody\",{className:\"\",children:[/*#__PURE__*/_jsx(\"tr\",{className:\"\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-3\",children:/*#__PURE__*/_jsx(\"input\",{onChange:e=>setAdditionInputs({...additionInputs,numerator1:e.target.value}),id:\"num\",className:\"input digit-input\"})})}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line-input\"})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"input\",{required:true,onChange:e=>setAdditionInputs({...additionInputs,denominator1:e.target.value}),id:\"num\",className:\"input digit-input\"})})]})})]})]}),/*#__PURE__*/_jsx(\"td\",{className:\"operator px-2 md:px-3 pl-3 md:pl-5\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:operation>0?/*#__PURE__*/_jsxs(\"tr\",{children:[operation===1&&/*#__PURE__*/_jsx(\"h2\",{children:\"+\"}),operation===2&&/*#__PURE__*/_jsx(\"h2\",{children:\"-\"}),operation===3&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xD7\"}),operation===4&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xF7\"})]}):/*#__PURE__*/_jsxs(\"tr\",{children:[randomNums.mixOperation===1&&/*#__PURE__*/_jsx(\"h2\",{children:\"+\"}),randomNums.mixOperation===2&&/*#__PURE__*/_jsx(\"h2\",{children:\"-\"}),randomNums.mixOperation===3&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xD7\"}),randomNums.mixOperation===4&&/*#__PURE__*/_jsx(\"h2\",{children:\"\\xF7\"})]})})})}),/*#__PURE__*/_jsxs(\"td\",{className:\"second-col flex  flex-row px-2 md:px-3\",children:[/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:randomNums.numerator2}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line\"})}),/*#__PURE__*/_jsx(\"tr\",{children:operation<3&&sameDenoms?randomNums.denominator1:randomNums.denominator2})]})}),operation<3&&!sameDenoms&&/*#__PURE__*/_jsxs(\"div\",{className:\"md:ml-4 flex flex-row\",children:[/*#__PURE__*/_jsx(\"table\",{className:\"flex items-center\",children:/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"tr\",{className:\"tr-different-deno\",children:/*#__PURE__*/_jsx(\"td\",{children:\"\\xD7\"})})})}),/*#__PURE__*/_jsx(\"table\",{className:\"\",children:/*#__PURE__*/_jsxs(\"tbody\",{className:\"\",children:[/*#__PURE__*/_jsx(\"tr\",{className:\"\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4\",children:/*#__PURE__*/_jsx(\"input\",{onChange:e=>setAdditionInputs({...additionInputs,numerator2:e.target.value}),id:\"num\",className:\"input digit-input\"})})}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line-input\"})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"input\",{onChange:e=>setAdditionInputs({...additionInputs,denominator2:e.target.value}),id:\"num\",className:\"input digit-input\"})})]})})]})]}),/*#__PURE__*/_jsx(\"td\",{className:\"= md:px-3\",children:/*#__PURE__*/_jsx(\"tr\",{children:\"=\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"inputs md:px-3\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(MathArrayInput,{type:\"inputNum\",index:index,randomSheetArray:randomSheetArray,setRandomSheetArray:setRandomSheetArray,difficulty:difficulty,operation:operation,sameDenoms:sameDenoms})}),/*#__PURE__*/_jsx(\"tr\",{className:\"line-tr\",children:/*#__PURE__*/_jsx(\"div\",{class:\"line-input\"})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(MathArrayInput,{type:\"inputDenom\",index:index,randomSheetArray:randomSheetArray,setRandomSheetArray:setRandomSheetArray,difficulty:difficulty,operation:operation,sameDenoms:sameDenoms})})]})})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 w-full  flex justify-center\",children:randomNums.isSubmitted?/*#__PURE__*/_jsx(\"div\",{className:\"w-full\",children:submitted?/*#__PURE__*/_jsx(\"div\",{children:operation===4||mixOperation===4?/*#__PURE__*/_jsxs(\"div\",{children:[console.log(\"divisionarrayresutl in submite\",divisionArrayResult),(_divisionArrayResult$=divisionArrayResult[index])!==null&&_divisionArrayResult$!==void 0&&_divisionArrayResult$.objectResult?/*#__PURE__*/_jsx(\"div\",{className:\"w-full flex justify-start\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-random text-white bg-blue-600 px-8 sm:px-14 md:px-0\",children:\"Excellent!\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"w-full flex justify-start\",children:[console.log(\"after submited random objectresult \",randomNums.objectResult),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleShowSolutionModal(index,true),className:\"btn-random text-white bg-orange-600 hover:bg-orange-500\",children:\"Oops.. Solution?\"})]})]}):/*#__PURE__*/_jsx(\"div\",{children:randomNums.objectResult?/*#__PURE__*/_jsx(\"div\",{className:\"w-full flex justify-start\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-random text-white bg-blue-600 px-8 sm:px-16 md:px-0\",children:\"Excellent!\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"w-full flex justify-start\",children:[console.log(\"after submited random objectresult \",randomNums.objectResult),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleShowSolutionModal(index,true),className:\"btn-random text-white bg-orange-600 hover:bg-orange-500\",children:\"Oops.. Solution?\"})]})})}):/*#__PURE__*/_jsx(\"div\",{className:\"w-full flex justify-start\",children:/*#__PURE__*/_jsx(\"button\",{disabled:true,className:\" btn-random bg-yellow-300 italic\",children:\"Submitted\"})})}):/*#__PURE__*/_jsx(\"div\",{className:\"w-full flex justify-start \",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleArrayCheck({randomNums},index),className:\" btn-random border-blue-600 text-blue-600 hover:text-white hover:bg-blue-600\",children:\"Submit\"})})}),randomNums.showSolutionModal&&/*#__PURE__*/_jsx(SolutionModal,{showSolutionModal:randomNums.showSolutionModal,setShowSolutionModal:value=>handleCloseSolutionModal(index,value),setShowCheckModal:setShowCheckModal,randomNums:randomNums,operation:operation,mixOperation:mixOperation,inputs:randomNums,sameDenoms:sameDenoms})]});}),/*#__PURE__*/_jsx(\"div\",{className:\" w-full text-center  items-center  my-4 pb-4 md:pb-8\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSubmitSheets(),disabled:objectSubmitCount<totalSheets,className:\" w-[60%] rounded-[5px] text-[12px] sm:text-[14px] md:text-[18px] py-2 border text-blue-600  border-blue-600 bg-white  hover:text-white hover:bg-blue-600 font-inter\",children:\"Submit your sheets\"})})]}),/*#__PURE__*/_jsx(CheckModal,{showCheckModal:showCheckModal,setShowCheckModal:setShowCheckModal,result:arrayResult}),/*#__PURE__*/_jsx(SubmitResultModal,{showSubmitResultModal:showSubmitResultModal,setShowSubmitResultModal:setShowSubmitResultModal,submitResult:submitResult,divisionArrayResult:divisionArrayResult,sheets:sheets})]});};export default RandomSheets;const SubmitResultModal=_ref2=>{let{showSubmitResultModal,setShowSubmitResultModal,divisionArrayResult,submitResult,sheets}=_ref2;useEffect(()=>{console.log(\"final result\",submitResult);},[]);const percentage=(submitResult/sheets*100).toFixed(0);const handleClose=()=>{setShowSubmitResultModal(false);};if(showSubmitResultModal){return/*#__PURE__*/_jsx(\"div\",{className:\" fixed top-0 left-0 w-full h-full pt-48 bg-transparent w-scree  backdrop-blur-sm flex justify-center items-center \",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-md z-40 w-96 max-h-85 mt-[80px] overflow-y-auto  p-4  mb-[200px]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center w-full\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-[25px] font-bold italic  text-green-800 \",children:\"Final Result\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-10 mb-10 p-6\",children:[percentage<50&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-[22px] font-thin\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-orange-600 italic text-[25px]\",children:\"Oops!\"}),\" you secured \",/*#__PURE__*/_jsxs(\"span\",{className:\"font-semibold text-[30px] italic\",children:[percentage,\"%\"]}),\" result.\"]}),percentage>=50&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-[22px] font-thin\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-green-800 italic text-[25px]\",children:\"Excellent!\"}),\" you secured \",/*#__PURE__*/_jsxs(\"span\",{className:\"font-semibold text-[30px] italic\",children:[percentage,\"%\"]}),\" result.\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{onClick:()=>handleClose(),className:\"flex flex-row w-full  justify-end mt-4 pr-4\",children:/*#__PURE__*/_jsx(\"button\",{className:\"flex justify-items-end p-1 pb-2 px-8 text-white rounded-md bg-orange-500\",children:\"Close\"})})]})});}};","map":{"version":3,"names":["React","useState","useEffect","useRef","CheckModal","SolutionModal","MathArrayInput","jsx","_jsx","jsxs","_jsxs","RandomSheets","_ref","getRandomNumber","showRandomSheets","totalSheets","setShowRandom","operation","difficulty","inputRange","additionInputs","setAdditionInputs","sameDenoms","sheets","DivisionResult","randomSheetArray","setRandomSheetArray","divisionInputs","setDivisionInputs","divisionArrayResult","setDivisionArrayResult","showCheckModal","setShowCheckModal","showSolutionModal","setShowSolutionModal","showSubmitResultModal","setShowSubmitResultModal","submitted","setSubmitted","arrayResult","setArrayResult","submitResult","setSubmitResult","objectSubmitCount","setObjectSubmitCount","mixOperation","inputs","setInputs","map","numerator","denominator","handleRandomSheets","handleArrayCheck","randomNums","i","console","log","ind","numerator1","denominator1","numerator2","denominator2","showSolutionBtn","checkDeno","checkNum","checkResult","parseInt","divisionNum1","divisionDenom1","divisionNum2","divisionDenom2","sign","deno2","num2","updatedArray","item","index","isSubmitted","objectResult","prevArray","newArray","deno1","num1","inputResult","inputNum","inputDenom","newCheckResult","parseFloat","toFixed","newInputResult","handleSubmitSheets","countTrueValues","array","trueValues","filter","length","handleShowSolutionModal","updatedRandomNums","handleCloseSolutionModal","updatedDivisionInputs","getRandomOperation","randomNum","Math","floor","random","min","max","push","handleDivisionInputsChange","field","value","updatedInputs","className","children","_divisionArrayResult$","class","onChange","e","target","id","required","type","onClick","disabled","result","SubmitResultModal","_ref2","percentage","handleClose"],"sources":["D:/Freelancing/simple-math/client/src/component/arithmetic/arithmetic/RandomSheets.js"],"sourcesContent":["import React,{useState, useEffect, useRef} from 'react'\r\nimport CheckModal from './CheckModal'\r\nimport SolutionModal from './SolutionModal';\r\nimport MathArrayInput from './MathArrayInput'\r\n\r\n\r\n\r\nconst RandomSheets = ({getRandomNumber, showRandomSheets, totalSheets,  setShowRandom, operation, difficulty, inputRange, additionInputs, setAdditionInputs, sameDenoms}) => {\r\n\r\n \r\n  \r\n  let sheets = totalSheets;\r\n  let DivisionResult = []\r\n  \r\n const [randomSheetArray, setRandomSheetArray] = useState([])\r\n const [divisionInputs, setDivisionInputs] = useState([])\r\n const [divisionArrayResult, setDivisionArrayResult] = useState([])\r\n const [showCheckModal, setShowCheckModal] = useState(false)\r\n const [showSolutionModal, setShowSolutionModal] = useState(false)\r\n const [showSubmitResultModal, setShowSubmitResultModal] = useState(false)\r\n const [submitted, setSubmitted] = useState(false)\r\n const [arrayResult, setArrayResult] = useState(false)\r\n const [submitResult, setSubmitResult] =  useState(0)\r\n const [objectSubmitCount, setObjectSubmitCount] = useState(0)\r\n const mixOperation= 0;\r\n\r\n \r\n const [inputs, setInputs] = useState(randomSheetArray.map(() => ({\r\n  numerator: 1,\r\n  denominator: 1\r\n})));\r\n\r\n\r\n\r\n  useEffect(() => {\r\n     \r\n   \r\n    handleRandomSheets(sheets)\r\n    setSubmitted(false)\r\n    setObjectSubmitCount(0)\r\n    setSubmitResult(0)\r\n   \r\n  \r\n   \r\n  \r\n  }, [totalSheets, showRandomSheets,showSolutionModal,difficulty, operation, sameDenoms]);\r\n \r\n \r\n\r\n\r\n\r\n  const handleArrayCheck = (randomNums, i) => {\r\n    console.log(\"both index are \", i, divisionInputs[i].ind, randomNums)\r\n    setObjectSubmitCount(objectSubmitCount+1)\r\n    const { numerator1, denominator1, numerator2, denominator2, showSolutionBtn } = randomNums.randomNums;\r\n    if (operation === 1 || randomNums.randomNums.mixOperation===1) {\r\n        if (sameDenoms) {\r\n            const checkDeno = denominator1;\r\n            const checkNum = numerator1 + numerator2;\r\n            var checkResult = checkNum / checkDeno;\r\n        } else {\r\n            const checkDeno = denominator1 * denominator2\r\n            const checkNum = (numerator1 * denominator2) + (numerator2 * denominator1);\r\n\r\n            if (parseInt(additionInputs.numerator1) === denominator2 &&\r\n                parseInt(additionInputs.denominator1) === denominator2 &&\r\n                parseInt(additionInputs.numerator2) === denominator1 &&\r\n                parseInt(additionInputs.denominator2) === denominator1) {\r\n                var checkResult = checkNum / checkDeno;\r\n            } else {\r\n                var checkResult = checkNum;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (operation === 2 || randomNums.randomNums.mixOperation===2) {\r\n        if (sameDenoms) {\r\n            const checkDeno = denominator1;\r\n            const checkNum = numerator1 - numerator2;\r\n            var checkResult = checkNum / checkDeno;\r\n        } else {\r\n            const checkDeno = denominator1 * denominator2\r\n            const checkNum = (numerator1 * denominator2) - (numerator2 * denominator1);\r\n\r\n            if (parseInt(additionInputs.numerator1) === denominator2 &&\r\n                parseInt(additionInputs.denominator1) === denominator2 &&\r\n                parseInt(additionInputs.numerator2) === denominator1 &&\r\n                parseInt(additionInputs.denominator2) === denominator1) {\r\n                var checkResult = checkNum / checkDeno;\r\n            } else {\r\n                var checkResult = checkNum;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (operation === 3 || randomNums.randomNums.mixOperation===3) {\r\n        const checkNum = numerator1 * numerator2;\r\n        const checkDeno = denominator1 * denominator2;\r\n\r\n        var checkResult = checkNum / checkDeno;\r\n    }\r\n\r\n    if (operation === 4 || randomNums.randomNums.mixOperation===4) {\r\n      console.log(\"whole object \", divisionInputs[i], \"operation\", operation, randomNums.randomNums.mixOperation)\r\n         \r\n       const {divisionNum1, divisionDenom1, divisionNum2, divisionDenom2, sign} = divisionInputs[i]\r\n\r\n\r\n        if (difficulty === 1) {\r\n            var deno2 = divisionDenom2\r\n            var num2 = divisionNum2\r\n            console.log(numerator2,deno2,denominator2,num2, divisionInputs[i].sign)\r\n            if (numerator2 === divisionDenom2 && denominator2 === divisionNum2 && sign === '*') {\r\n                const updatedArray = randomSheetArray.map((item, index) => {\r\n                  // Check if the index matches the index of the item to update\r\n                  \r\n                  if (index === i) {\r\n                      console.log(\"true is hit\", index, i)\r\n                      // Return a new object with updated properties\r\n                      return { ...item, isSubmitted: true, objectResult: true, showSolutionModal: false };\r\n                  }\r\n                  // Return the original object if it's not the one to update\r\n                  return item;\r\n                });\r\n                // Update the state with the updated array\r\n                setDivisionArrayResult((prevArray) => {\r\n                  const newArray = [...prevArray];\r\n                  newArray[i] = { index: i, objectResult: true };\r\n                  return newArray;\r\n                });\r\n\r\n                setRandomSheetArray(updatedArray);\r\n                setSubmitResult(submitResult + 1);\r\n\r\n          } else {\r\n            const updatedArray = randomSheetArray.map((item, index) => {\r\n              if (index === i) {\r\n                  \r\n                  // If the properties match, return a new object with the updated \r\n                  return { ...item, isSubmitted: true, objectResult: false, showSolutionModal: false };\r\n              }\r\n              // If the properties don't match, return the original object\r\n              return item;\r\n          });\r\n          \r\n          setDivisionArrayResult((prevArray) => {\r\n            const newArray = [...prevArray];\r\n            newArray[i] = { index: i, objectResult: false};\r\n            return newArray;\r\n          });\r\n\r\n          setRandomSheetArray(updatedArray);\r\n      \r\n              \r\n\r\n          }\r\n        }\r\n\r\n        if (difficulty > 1) {\r\n            var deno2 = divisionDenom2\r\n            var num2 = divisionNum2\r\n            var deno1 = divisionDenom1\r\n            var num1 = divisionNum1\r\n\r\n            if ((numerator2 === deno2 &&\r\n                    denominator2 === num2 &&\r\n                    numerator1 === num1 &&\r\n                    denominator1 === deno1 &&\r\n                    divisionInputs[i].sign === '*') ||\r\n                (numerator1 === deno1 &&\r\n                    denominator1 === num1 &&\r\n                    numerator2 === num2 &&\r\n                    denominator2 === deno2 &&\r\n                    divisionInputs[i].sign === '*')) {\r\n                      console.log(\"true is hit\")\r\n                      const updatedArray = randomSheetArray.map((item, index) => {\r\n                        // Check if the index matches the index of the item to update\r\n                        if (index === i) {\r\n                            // Return a new object with updated properties\r\n                            return { ...item, isSubmitted: true, objectResult: true, showSolutionModal: false };\r\n                        }\r\n                        // Return the original object if it's not the one to update\r\n                        return item;\r\n                      });\r\n                      // Update the state with the updated array\r\n\r\n                      setDivisionArrayResult((prevArray) => {\r\n                        const newArray = [...prevArray];\r\n                        newArray[i] = { index: i, objectResult: true};\r\n                        return newArray;\r\n                      });\r\n\r\n                      setRandomSheetArray(updatedArray);\r\n                      setSubmitResult(submitResult + 1);\r\n            }\r\n            else {\r\n              console.log(\"false is hit\")\r\n              const updatedArray = randomSheetArray.map((item, index) => {\r\n                if (index === i) {\r\n                    // If the properties match, return a new object with the updated \r\n                    return { ...item, isSubmitted: true, objectResult: false, showSolutionModal: false };\r\n                }\r\n                // If the properties don't match, return the original object\r\n                return item;\r\n            });\r\n            setDivisionArrayResult((prevArray) => {\r\n              const newArray = [...prevArray];\r\n              newArray[i] = { index: i, objectResult: false};\r\n              return newArray;\r\n            });\r\n            \r\n            setRandomSheetArray(updatedArray);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n  //   if (operation === 4 || randomNums.randomNums.mixOperation ===4) {\r\n  //     var inputResult = randomNums.randomNums.inputNum / randomNums.randomNums.inputDenom;\r\n\r\n  //     console.log(inputResult)\r\n  //      var newCheckResult = parseFloat(checkResult).toFixed(2);\r\n  //      var newInputResult = parseFloat(inputResult).toFixed(2)\r\n\r\n  //      console.log(randomNums.randomNums.numerator2,divisionInputs[i].divisionDenom2, randomNums.randomNums.denominator2,divisionInputs[i].divisionNum2)\r\n  //     if (\r\n  //       randomNums.randomNums.numerator2 === divisionInputs[i].divisionDenom2 &&\r\n  //       randomNums.randomNums.denominator2 === divisionInputs[i].divisionNum2 &&\r\n  //       divisionInputs[i].sign === '*'\r\n  //     ) {\r\n  //         const updatedArray = randomSheetArray.map((item, index) => {\r\n  //           // Compare properties of the objects to determine if they are equal\r\n  //           if (index===i) {\r\n  //               // If the properties match, return a new object with the updated \r\n                \r\n  //               return { ...item, isSubmitted:true, objectResult: true, showSolutionModal: false };\r\n               \r\n  //           }\r\n  //           // If the properties don't match, return the original object\r\n  //           return item;\r\n  //       });\r\n\r\n  //       setDivisionArrayResult((prevArray) => {\r\n  //         const newArray = [...prevArray];\r\n  //         newArray[i] = { index: i, objectResult: true };\r\n  //         return newArray;\r\n  //       });\r\n  //       setRandomSheetArray(updatedArray);\r\n  //       setSubmitResult(submitResult+1)\r\n        \r\n\r\n         \r\n  //     } else {\r\n  //       const updatedArray = randomSheetArray.map((item, index)=> {\r\n  //         // Compare properties of the objects to determine if they are equal\r\n  //         if (index===i) {\r\n  //             // If the properties match, return a new object with the updated \r\n  //             return { ...item, isSubmitted: true, objectResult: false, showSolutionModal: false };\r\n              \r\n  //         }\r\n  //         // If the properties don't match, return the original object\r\n  //         return item;\r\n  //     });\r\n  //     setDivisionArrayResult((prevArray) => {\r\n  //       const newArray = [...prevArray];\r\n  //       newArray[i] = { index: i, objectResult: false };\r\n  //       return newArray;\r\n  //     });\r\n  //     setRandomSheetArray(updatedArray);\r\n      \r\n  //     }\r\n\r\n  // }\r\n\r\n    if (operation !== 4 || randomNums.randomNums.mixOperation!==4) {\r\n        var inputResult = randomNums.randomNums.inputNum / randomNums.randomNums.inputDenom;\r\n\r\n        console.log(inputResult)\r\n         var newCheckResult = parseFloat(checkResult).toFixed(2);\r\n         var newInputResult = parseFloat(inputResult).toFixed(2)\r\n        if (newCheckResult === newInputResult) {\r\n            const updatedArray = randomSheetArray.map((item, index) => {\r\n              // Compare properties of the objects to determine if they are equal\r\n              if (index===i) {\r\n                  // If the properties match, return a new object with the updated \r\n                  return { ...item, isSubmitted:true, objectResult: true, showSolutionModal: false };\r\n                  \r\n              }\r\n              // If the properties don't match, return the original object\r\n              return item;\r\n          });\r\n          setRandomSheetArray(updatedArray);\r\n          setSubmitResult(submitResult+1)\r\n\r\n          if(operation===0){\r\n            setDivisionArrayResult((prevArray) => {\r\n              const newArray = [...prevArray];\r\n              newArray[i] = { index: i, objectResult: true };\r\n              return newArray;\r\n            });\r\n          }\r\n          \r\n  \r\n           \r\n        } else {\r\n          const updatedArray = randomSheetArray.map((item, index)=> {\r\n            // Compare properties of the objects to determine if they are equal\r\n            if (index===i) {\r\n                // If the properties match, return a new object with the updated \r\n                return { ...item, isSubmitted: true, objectResult: false, showSolutionModal: false };\r\n            }\r\n            // If the properties don't match, return the original object\r\n            return item;\r\n        });\r\n        setRandomSheetArray(updatedArray);\r\n\r\n        if(operation===0){\r\n          setDivisionArrayResult((prevArray) => {\r\n            const newArray = [...prevArray];\r\n            newArray[i] = { index: i, objectResult: false };\r\n            return newArray;\r\n          });\r\n        }\r\n        \r\n        }\r\n \r\n    }\r\n \r\n}\r\n\r\nconst handleSubmitSheets = () => {\r\n  if(operation===4 || mixOperation===4){\r\n    function countTrueValues(array) {\r\n      const trueValues = array.filter(item => item.objectResult === true);\r\n       return trueValues.length;   }\r\n    \r\n      setSubmitResult(countTrueValues(divisionArrayResult))\r\n  }\r\n\r\n  // if(operation===0){\r\n  //   function countTrueValues(array) {\r\n  //     const trueValues = array.filter(item => item.objectResult === true);\r\n  //      return trueValues.length;   }\r\n    \r\n  //     setSubmitResult(countTrueValues(divisionArrayResult))\r\n  // }\r\n  \r\n  setSubmitted(true)\r\n  setShowSubmitResultModal(true)\r\n\r\n}\r\n\r\nconst handleShowSolutionModal = (index) => {\r\n  // Create a copy of the randomNums array\r\n  const updatedRandomNums = [...randomSheetArray];\r\n  // Set the showSolutionModal property of the specific object to true\r\n  updatedRandomNums[index] = { ...updatedRandomNums[index], showSolutionModal: true };\r\n  // Update the state with the modified array\r\n  setRandomSheetArray(updatedRandomNums);\r\n};\r\n\r\nconst handleCloseSolutionModal = (index) => {\r\n  // Create a copy of the randomNums array\r\n  const updatedRandomNums = [...randomSheetArray];\r\n  // Set the showSolutionModal property of the specific object to true\r\n  updatedRandomNums[index] = { ...updatedRandomNums[index], showSolutionModal: false };\r\n  // Update the state with the modified array\r\n  setRandomSheetArray(updatedRandomNums);\r\n};\r\n\r\n   \r\n const handleRandomSheets = (sheets) => {\r\n\r\n   const updatedArray= [];\r\n   const updatedDivisionInputs = [];\r\n\r\n   const getRandomOperation = () => {\r\n    let randomNum;\r\n    do {\r\n      randomNum = Math.floor(Math.random() * 4) + 1;\r\n    } while (randomNum === 3); \r\n    return randomNum;\r\n  };\r\n  \r\n  let mixOperation;\r\n \r\n  \r\n  for (let i = 0; i < sheets; i++) {\r\n    if(operation===0){\r\n      \r\n       mixOperation = getRandomOperation();\r\n      console.log(\"mix operation in array\", mixOperation)\r\n    }\r\n    \r\n    const numerator1 = getRandomNumber(inputRange.min, inputRange.max);\r\n    const denominator1 = getRandomNumber(inputRange.min, inputRange.max);\r\n    const numerator2 = getRandomNumber(inputRange.min, inputRange.max);\r\n    const denominator2 = getRandomNumber(inputRange.min, inputRange.max);\r\n\r\n  \r\n    updatedArray.push({\r\n      numerator1,\r\n      denominator1,\r\n      numerator2,\r\n      denominator2,\r\n      mixOperation,\r\n      inputNum:'',\r\n      inputDenom:'',\r\n      isSubmitted: false,\r\n      objectResult: false\r\n\r\n    });\r\n\r\n    updatedDivisionInputs.push({\r\n      ind: i,\r\n      divisionNum1:'',\r\n      divisionDenom1:'',\r\n      divisionNum2:'',\r\n      divisionDenom2:'',\r\n      sign:''\r\n        })\r\n\r\n  }\r\n\r\n  setRandomSheetArray(updatedArray)\r\n  setDivisionInputs(updatedDivisionInputs)\r\n  console.log(\"checking divisioninputs in \", divisionInputs)\r\n} \r\n\r\nconst handleDivisionInputsChange = (index, field, value) => {\r\n  const updatedInputs = [...divisionInputs];\r\n  updatedInputs[index] = {\r\n    ...updatedInputs[index],\r\n    [field]: value\r\n  };\r\n  setDivisionInputs(updatedInputs);\r\n};\r\n\r\n// const handleDivisionInputsChange = (index, field, event) => {\r\n//   // Make a copy of the array\r\n//   const updatedInputs = [...divisionInputs];\r\n\r\n//   // Update the field in the object at the given index\r\n//   updatedInputs[index] = {\r\n//     ...updatedInputs[index],\r\n//     [field]: event.target.value\r\n//   };\r\n\r\n//   // Update the state\r\n//   setDivisionInputs(updatedInputs);\r\n// };\r\n\r\n if(showRandomSheets)\r\n\r\n  return  (\r\n    <div className='flex flex-col justify-center  rounded-md '>\r\n        <div className='px-auto flex flex-col  gap-4 '>\r\n                    \r\n                      {randomSheetArray.map((randomNums, index)=> (\r\n                        <div className='px-[8px] sm:px-[15px] md:px-[40px] pt-1 sm:pt-2  md:pt-4 pb-2  md:pb-4 mt-3 md:mt-6 bg-gray-50 rounded-md'>\r\n                          <div className='bg-white w-5 h-5 md:w-10 md:h-10 rounded-full flex items-center justify-center mb-2 md:mb-4'><h2 className='text-gray-500 italic text-[12px] md:text-[18px]' >{index+1}</h2></div>\r\n                              {(operation===4 || randomNums.mixOperation===4)?\r\n                                    <div className='flex items-center justify-start   '>\r\n                                      {difficulty===1 &&\r\n                                            <table className='digit '>\r\n                                            <tr className=''>\r\n                                              <td className='first-col px-2'>\r\n                                                  <table className=''>\r\n                                                    <tbody className=''>\r\n                                                        <tr className=''>\r\n                                                          {randomNums.numerator1}\r\n                                                        </tr>\r\n                                                        <tr className='line-tr'>\r\n                                                            <div class=\"line\"></div>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                          {randomNums.denominator1}\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                                  \r\n                                              </td>\r\n\r\n                                          \r\n                \r\n                                              <td className='opertor px-1 md:px-4'>\r\n                                                  <table>\r\n                                                    <tbody>\r\n                                                      {(operation>0)?\r\n                                                        <tr>\r\n                                                            {operation===1  && <h2>+</h2>}\r\n                                                            {operation===2 && <h2>-</h2>}\r\n                                                            {operation===3 && <h2>&times;</h2>}\r\n                                                            {operation===4 && <h2>&divide;</h2>}\r\n                                                        </tr>\r\n                                                          :\r\n                                                          <tr>\r\n                                                            { randomNums.mixOperation===1 && <h2>+</h2>}\r\n                                                            { randomNums.mixOperation===2 && <h2>-</h2>}\r\n                                                            { randomNums.mixOperation===3 && <h2>&times;</h2>}\r\n                                                            { randomNums.mixOperation===4 && <h2>&divide;</h2>}\r\n                                                        </tr>\r\n                \r\n                                                        }\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>\r\n                \r\n                                              <td className='second-col px-2'>\r\n                                                  <table>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                          {randomNums.numerator2}\r\n                                                        </tr>\r\n                                                        <tr className='line-tr'>\r\n                                                            <div class=\"line\"></div>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                          {(operation<3 && sameDenoms)? randomNums.denominator1 : randomNums.denominator2}\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>\r\n                \r\n                                              <td className='= px-1 md:px-6'>\r\n                                                <tr>=</tr>\r\n                                              </td>\r\n                        {/* ================================================== input side ========================================== */}\r\n                                              <td className='inputs md:px-4 flex flex-row  items-center'>\r\n                                              <td className='first-col px-2 md:px-4'>\r\n                                                  <table className=''>\r\n                                                    <tbody className=''>\r\n                                                        <tr className=''>\r\n                                                          {randomNums.numerator1}\r\n                                                        </tr>\r\n                                                        <tr className='line-tr'>\r\n                                                            <div class=\"line\"></div>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                          {randomNums.denominator1}\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>\r\n                \r\n                                              <td className='opertor px-2 md:px-4  flex items-center'>\r\n                                                  <table>\r\n                                                    <tbody className=''>\r\n                                                        <tr>\r\n                                                        <td className=\"text-center\"> {/* Add a td element to center the input */}\r\n                                                        <input onChange={(e)=>handleDivisionInputsChange(index, 'sign', e.target.value)} id='sign' className='input-div digit-input text-center'/>\r\n                                                        </td>\r\n                                                      </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>\r\n                \r\n                                              <td className='second-col md:px-4'>\r\n                                                  <table>\r\n                                                    <tbody>\r\n                                                        <tr className=''>\r\n                                                        <input onChange={(e)=>handleDivisionInputsChange(index, 'divisionNum2', parseInt(e.target.value))} id='divisionNum2' className='input digit-input'/>\r\n                                                        </tr>\r\n                                                        <tr className='line-tr'>\r\n                                                            <div class=\"line-input\"></div>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                        <input onChange={(e)=>handleDivisionInputsChange(index, 'divisionDenom2', parseInt(e.target.value))} id='divisionDenom2' className='input digit-input'/>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>       \r\n                                                </td>\r\n                                            </tr>\r\n                                            </table>\r\n                                      }\r\n\r\n                                      {difficulty>1 &&\r\n                                            <table className='digit'>\r\n                                            <tr className=''>\r\n                                              <td className='first-col'>\r\n                                                  <table className=''>\r\n                                                    <tbody className=''>\r\n                                                        <tr className=''>\r\n                                                          {randomNums.numerator1}\r\n                                                        </tr>\r\n                                                        <tr className='line-tr'>\r\n                                                            <div class=\"line\"></div>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                          {randomNums.denominator1}\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>\r\n                \r\n                                              <td className='opertor px-2 md:px-4'>\r\n                                                  <table>\r\n                                                    <tbody>\r\n                                                      {(operation>0)?\r\n                                                        <tr>\r\n                                                            {operation===1  && <h2>+</h2>}\r\n                                                            {operation===2 && <h2>-</h2>}\r\n                                                            {operation===3 && <h2>&times;</h2>}\r\n                                                            {operation===4 && <h2>&divide;</h2>}\r\n                                                        </tr>\r\n                                                          :\r\n                                                          <tr>\r\n                                                            { randomNums.mixOperation===1 && <h2>+</h2>}\r\n                                                            { randomNums.mixOperation===2 && <h2>-</h2>}\r\n                                                            { randomNums.mixOperation===3 && <h2>&times;</h2>}\r\n                                                            { randomNums.mixOperation===4 && <h2>&divide;</h2>}\r\n                                                        </tr>\r\n                \r\n                                                        }\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>\r\n                \r\n                                              <td className='second-col md:px-4'>\r\n                                                  <table>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                          {randomNums.numerator2}\r\n                                                        </tr>\r\n                                                        <tr className='line-tr'>\r\n                                                            <div class=\"line\"></div>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                          {(operation<3 && sameDenoms)? randomNums.denominator1 : randomNums.denominator2}\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>\r\n                \r\n                                              <td className='= px-2 md:px-6'>\r\n                                                <tr>=</tr>\r\n                                              </td>\r\n        {/* ================================================== input side ========================================== */}\r\n                                              <td className='inputs md:px-4 flex flex-row items-center'>\r\n                                              <td className='first-col md:px-4'>\r\n                                                  <table>\r\n                                                    <tbody>\r\n                                                        <tr className=''>\r\n                                                          <input onChange={(e)=>handleDivisionInputsChange(index, 'divisionNum1', parseInt(e.target.value))} id='divisionNum1' className='input digit-input'/>\r\n                                                        </tr>\r\n                                                        <tr className='line-tr'>\r\n                                                            <div class=\"line-input\"></div>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                        <input onChange={(e)=>handleDivisionInputsChange(index, 'divisionDenom1', parseInt(e.target.value))} id='divisionDenom1' className='input digit-input'/>\r\n                                                        \r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>  \r\n                \r\n                                              <td className='opertor px-2 md:px-4  flex items-center'>\r\n                                                  <table>\r\n                                                    <tbody className=''>\r\n                                                        <tr>\r\n                                                        <td className=\"text-center\"> {/* Add a td element to center the input */}\r\n                                                        <input onChange={(e)=>handleDivisionInputsChange(index, 'sign', e.target.value)} id='divisionSign' className='input-div digit-input text-center'/>\r\n                                                        </td>\r\n                                                      </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>\r\n                \r\n                                              <td className='second-col md:px-4'>\r\n                                                  <table>\r\n                                                    <tbody>\r\n                                                        <tr className=''>\r\n                                                        <input  onChange={(e)=>handleDivisionInputsChange(index, 'divisionNum2', parseInt(e.target.value))} id='divisionNum2' className='input digit-input'/>\r\n                                                        </tr>\r\n                                                      \r\n                                                        <tr className='line-tr'>\r\n                                                            <div class=\"line-input\"></div>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                        <input onChange={(e)=>handleDivisionInputsChange(index, 'divisionDenom2', parseInt(e.target.value))} id='divisionDenom2' className='input digit-input'/>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                  </table>\r\n                                              </td>       \r\n                                                </td>\r\n                                            </tr>\r\n                                            </table>\r\n                                      }\r\n                                      \r\n                                    </div>\r\n                                :\r\n                                   <div className='digit  pl-0 pr-0 justify-start'>\r\n\r\n                                      <table className=''>\r\n                                      <tr className=''>\r\n                                        <td className='first-col flex flex-row justify-start '>\r\n                                            <table className=''>\r\n                                              <tbody className=''>\r\n                                                  <tr className=''>\r\n                                                    {randomNums.numerator1}\r\n                                                  </tr>\r\n                                                  <tr className='line-tr'>\r\n                                                      <div class=\"line\"></div>\r\n                                                  </tr>\r\n                                                  <tr>\r\n                                                    {randomNums.denominator1}\r\n                                                  </tr>\r\n                                              </tbody>\r\n                                            </table>\r\n                                      {/* ======= check if the operation is addition and denominators are different, then put extra inputs. */}\r\n                                            {(operation<3 && !sameDenoms) &&\r\n                                                    <div className='md:ml-4 flex flex-row'>\r\n                                                        <table className='flex items-center'>\r\n                                                          <tbody>\r\n                                                          <tr className='tr-different-deno'>\r\n                                                            <td>\r\n                                                            &times;\r\n                                                            </td>\r\n                                                          </tr>\r\n                                                          </tbody>\r\n                                                        </table>\r\n                                                        <table className=''>\r\n                                                        <tbody className=''>\r\n                                                            <tr className=''>\r\n                                                              <div className='max-w-3'>\r\n                                                              <input onChange={(e)=>setAdditionInputs({...additionInputs, numerator1: e.target.value})} id='num' className='input digit-input'/>\r\n                                                              </div>\r\n                                                            \r\n                                                            </tr>\r\n                                                            <tr className='line-tr'>\r\n                                                                <div class=\"line-input\"></div>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                            <input required onChange={(e)=>setAdditionInputs({...additionInputs, denominator1: e.target.value})} id='num' className='input digit-input'/>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                      </table>\r\n                                                    </div>\r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td className='operator px-2 md:px-3 pl-3 md:pl-5'>\r\n                                            <table>\r\n                                              <tbody>\r\n                                                {(operation>0)?\r\n                                                  <tr>\r\n                                                      {operation===1  && <h2>+</h2>}\r\n                                                      {operation===2 && <h2>-</h2>}\r\n                                                      {operation===3 && <h2>&times;</h2>}\r\n                                                      {operation===4 && <h2>&divide;</h2>}\r\n                                                  </tr>\r\n                                                  :\r\n                                                  <tr>\r\n                                                      { randomNums.mixOperation===1 && <h2>+</h2>}\r\n                                                      { randomNums.mixOperation===2 && <h2>-</h2>}\r\n                                                      { randomNums.mixOperation===3 && <h2>&times;</h2>}\r\n                                                      { randomNums.mixOperation===4 && <h2>&divide;</h2>}\r\n                                                  </tr>\r\n\r\n                                                  }\r\n                                              </tbody>\r\n                                            </table>\r\n                                        </td>\r\n\r\n                                        <td className='second-col flex  flex-row px-2 md:px-3'>\r\n                                            <table>\r\n                                              <tbody>\r\n                                                  <tr>\r\n                                                    {randomNums.numerator2}\r\n                                                  </tr>\r\n                                                  <tr className='line-tr'>\r\n                                                      <div class=\"line\"></div>\r\n                                                  </tr>\r\n                                                  <tr>\r\n                                                    {(operation<3 && sameDenoms)? randomNums.denominator1 : randomNums.denominator2}\r\n                                                  </tr>\r\n                                              </tbody>\r\n                                            </table>\r\n                                            {(operation<3 && !sameDenoms) &&\r\n                                                    <div className='md:ml-4 flex flex-row'>\r\n                                                        <table className='flex items-center'>\r\n                                                          <tbody>\r\n                                                          <tr className='tr-different-deno'>\r\n                                                            <td>\r\n                                                            &times;\r\n                                                            </td>\r\n                                                          </tr>\r\n                                                          </tbody>\r\n                                                        </table>\r\n                                                        <table className=''>\r\n                                                        <tbody className=''>\r\n                                                            <tr className=''>\r\n                                                              <div className='max-w-4'>\r\n                                                              <input onChange={(e)=>setAdditionInputs({...additionInputs, numerator2: e.target.value})} id='num' className='input digit-input'/>\r\n                                                              </div>\r\n                                                            \r\n                                                            </tr>\r\n                                                            <tr className='line-tr'>\r\n                                                                <div class=\"line-input\"></div>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                            <input onChange={(e)=>setAdditionInputs({...additionInputs, denominator2: e.target.value})} id='num' className='input digit-input'/>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                      </table>\r\n                                                    </div>\r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td className='= md:px-3'>\r\n                                          <tr>=</tr>\r\n                                        </td>\r\n\r\n                                        <td className='inputs md:px-3'>\r\n                                            <table>\r\n                                              <tbody>\r\n                                             \r\n                                                  <tr>\r\n                                                  <MathArrayInput  type='inputNum' index={index}  randomSheetArray={randomSheetArray} setRandomSheetArray={setRandomSheetArray} difficulty={difficulty} operation={operation} sameDenoms={sameDenoms}/>\r\n                                                  </tr>\r\n                                                  <tr className='line-tr'>\r\n                                                      <div class=\"line-input\"></div>\r\n                                                  </tr>\r\n                                                  <tr>\r\n                                                  <MathArrayInput  type='inputDenom' index={index}  randomSheetArray={randomSheetArray} setRandomSheetArray={setRandomSheetArray} difficulty={difficulty} operation={operation} sameDenoms={sameDenoms}/>\r\n                                                  </tr>\r\n                                               </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                      </tr>\r\n                                      </table>  \r\n                                      </div>                 \r\n                       }\r\n\r\n                         <div className='mt-6 w-full  flex justify-center'>\r\n                       \r\n                          {randomNums.isSubmitted?\r\n                             <div className='w-full'>\r\n                                {submitted ? (\r\n                                    <div>\r\n                                    {(operation===4 || mixOperation===4) ?\r\n                                      <div>{console.log(\"divisionarrayresutl in submite\", divisionArrayResult)}\r\n                                         { divisionArrayResult[index]?.objectResult ? (\r\n                                        <div className='w-full flex justify-start'>\r\n                                          \r\n                                        <button className='btn-random text-white bg-blue-600 px-8 sm:px-14 md:px-0'>Excellent!</button>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <div className='w-full flex justify-start'>\r\n                                            {console.log(\"after submited random objectresult \", randomNums.objectResult)}\r\n                                        <button  onClick={() => handleShowSolutionModal(index, true)} className='btn-random text-white bg-orange-600 hover:bg-orange-500'>Oops.. Solution?</button>\r\n                                        </div>\r\n                                      )}\r\n                                      </div>\r\n                                    :\r\n                                     <div>\r\n                                      { randomNums.objectResult ? (\r\n                                        <div className='w-full flex justify-start'>\r\n                                          \r\n                                        <button className='btn-random text-white bg-blue-600 px-8 sm:px-16 md:px-0'>Excellent!</button>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <div className='w-full flex justify-start'>\r\n                                            {console.log(\"after submited random objectresult \", randomNums.objectResult)}\r\n                                        <button  onClick={() => handleShowSolutionModal(index, true)} className='btn-random text-white bg-orange-600 hover:bg-orange-500'>Oops.. Solution?</button>\r\n                                        </div>\r\n                                      )}\r\n                                      </div>}\r\n                                      \r\n                                    </div>\r\n                                  ) : (\r\n                                    <div className='w-full flex justify-start'>\r\n                                    <button  disabled={true} className=' btn-random bg-yellow-300 italic'>Submitted</button>\r\n                                    </div>\r\n                                  )}\r\n\r\n                            </div>\r\n                           :\r\n                           <div className='w-full flex justify-start '>\r\n                       \r\n                               <button onClick={()=>handleArrayCheck({randomNums}, index)} className=' btn-random border-blue-600 text-blue-600 hover:text-white hover:bg-blue-600'>Submit</button>\r\n                          </div>\r\n                        }\r\n                          </div>\r\n                          {randomNums.showSolutionModal && (\r\n                            <SolutionModal\r\n                              showSolutionModal={randomNums.showSolutionModal}\r\n                              setShowSolutionModal={(value) => handleCloseSolutionModal(index, value)}\r\n                              setShowCheckModal={setShowCheckModal}\r\n                              randomNums={randomNums}\r\n                              operation={operation}\r\n                              mixOperation={mixOperation}\r\n                              inputs={randomNums}\r\n                              sameDenoms={sameDenoms}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      ))} \r\n\r\n\r\n                      <div className=' w-full text-center  items-center  my-4 pb-4 md:pb-8'>\r\n                         <button onClick={()=>handleSubmitSheets()} disabled={objectSubmitCount<totalSheets}  className=' w-[60%] rounded-[5px] text-[12px] sm:text-[14px] md:text-[18px] py-2 border text-blue-600  border-blue-600 bg-white  hover:text-white hover:bg-blue-600 font-inter'>Submit your sheets</button>\r\n                      </div>\r\n              </div>\r\n              \r\n              <CheckModal showCheckModal={showCheckModal} setShowCheckModal={setShowCheckModal} result={arrayResult}/>\r\n              <SubmitResultModal showSubmitResultModal={showSubmitResultModal} setShowSubmitResultModal={setShowSubmitResultModal} submitResult={submitResult} divisionArrayResult={divisionArrayResult} sheets={sheets}/>\r\n           \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RandomSheets\r\n\r\n\r\nconst SubmitResultModal = ({showSubmitResultModal, setShowSubmitResultModal,divisionArrayResult, submitResult, sheets}) => {\r\n  \r\n  useEffect(()=>{\r\n    console.log(\"final result\", submitResult)\r\n  },[])\r\n  \r\n  const percentage = ((submitResult/sheets) * 100).toFixed(0);\r\n  const handleClose = () => {\r\n    setShowSubmitResultModal(false)\r\n    \r\n  }\r\n  if(showSubmitResultModal)\r\n  {\r\n   return (\r\n     <div className=' fixed top-0 left-0 w-full h-full pt-48 bg-transparent w-scree  backdrop-blur-sm flex justify-center items-center '>\r\n \r\n       <div className='bg-white rounded-md z-40 w-96 max-h-85 mt-[80px] overflow-y-auto  p-4  mb-[200px]'>\r\n             <div className='text-center w-full'>\r\n               <h2 className='text-[25px] font-bold italic  text-green-800 '>Final Result</h2>\r\n               <div className='mt-10 mb-10 p-6'>\r\n                  {percentage<50 && \r\n                    <p className='text-[22px] font-thin'><span className='text-orange-600 italic text-[25px]'>Oops!</span> you secured <span className='font-semibold text-[30px] italic'>{percentage}%</span> result.</p>\r\n                  }\r\n                    {percentage>=50 && \r\n                    <p className='text-[22px] font-thin'><span className='text-green-800 italic text-[25px]'>Excellent!</span> you secured <span className='font-semibold text-[30px] italic'>{percentage}%</span> result.</p>\r\n                  }\r\n               </div>\r\n             </div>\r\n           \r\n                {/* ====================================== close button ======================================== */}\r\n                <div onClick={()=>handleClose()} className='flex flex-row w-full  justify-end mt-4 pr-4'>\r\n                      <button className='flex justify-items-end p-1 pb-2 px-8 text-white rounded-md bg-orange-500' >Close</button>\r\n              </div>\r\n             \r\n       </div>\r\n    </div>\r\n   )\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}